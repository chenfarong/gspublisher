{"version":3,"sources":["assets/Script/Config.js","assets/resources/GMain.js","assets/resources/Game.js","assets/Script/Gm.js","assets/Script/Home.js","assets/resources/Loading.js","assets/Script/Login.js","assets/Script/Network.js","assets/Script/NewScript.js","assets/prefab/item/ScriptGmCmd.js","assets/Script/TipsCtrl.js","assets/Script/TipsManager.js","assets/Script/main.js"],"names":["module","exports","properties","LoadFromFile","fname","callback","arg","cc","loader","loadRes","err","jsonAsset","this","Data","json","_onAfterLoaded","bind","Array","isArray","FeildName","Loaded","RowObject","index","length","res","Object","o","i","toString","FindObject","result","kname","kvalue","n","arguments","undefined","j","Count","push","FindObjectIndexOf","indexOf","FeildIndex","RowFeildValueFirst","idx","r","Current","RowFeildValue","Select","RowFeildValueFirstEx","ksecond","jx","_Game","require","_Network","Class","extends","Component","TryTick","Loading","Prefab","createLoading","instantiate","sz","director","getWinSize","setPosition","width","height","parent","getScene","name","onLoad","start","XGame","Where","cbWhere","who","response","XNet","dispatchXNet","WhereAfter","v","find","showText","getComponent","Label","string","whereResult","rc","Version","cbUpgrade","statics","clientVersion","resVersion","username","password","accid","aid","token","sdtime","whereUrl","url","req","cmd","ver","realm","xhr","getXMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","open","timeout","ontimeout","console","error","send","stringify","log","server","aver","Update","dt","AConfig","Info","WsHost","EditBox","CmdSend","CmdResult","Recv","LastCmdName","RecvCount","LabRecvCount","GmJson","default","type","JsonAsset","ScrollItem","ScrollCmd","ScrollView","netEvent","event","msg","cmdline","TxLog","text","_onGmCmdClick","tar","note","GmInsert","title","item","sc","SetData","content","addChild","EarAdd","_onAfterGmJsonDBLoaded","_onAfterGmConfig","NAME","CMDLINE","NOTE","ClickConnect","Host","Open","ClickDisconnect","Close","ClickWsLibrary","ClickCmdSend","Send","e","message","ClickScrollItem","label","labXhr","NetReady","appVer","netEvListener","netMsgListener","CmdWait","tipsPrefab","ShowStory","netSocketEvent","target","XNetEvent","CONNECTED","CONNECT_TIMEOUT","CONNECT_ERROR","CONNECT","ws_host","getScheduler","schedule","ConnectCheck","_onAfterGetXMLHttpRequest","UpdateGamePort","_xhrXHR","getChildByName","xlab","anim","Animation","play","_xlab","UpdateGamePort1","setRequestHeader","netMsgProc","ListenerAdd","update","clickGameSwitch","createTips","tipsCtrl","setContent","ClickAppBuild","app","ClickAppUpgradeTest","ClickAppUpgradeAudit","ClickGamePortWhere","ShowText","SetShowText","Username","Password","ClickStart","loadScene","WebSocket","window","MozWebSocket","CLOSE","_socket","_netPros","Map","_netEars","_connectTimeout","_wsReConnectTimes","_reConnectFlag","_reConnectMax","forEach","array","listeners","slice","uri","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_onMessage","close","data","listenerList","ListenerRemove","splice","ear","EarRemove","pos","flagReconn","CONNECTING","CLOSED","OPEN","Name","Target","Callback","Cmdline","Note","Click","onDestroySelf","node","destroy","onEnable","AutoRemove","removeChild","tispPrefab","init","Boolean","color","opacity","ClickBuild","ClickTestUpgrade","ClickAuditInstall","ClickGameSwitchPort","ClickAuditPass"],"mappings":"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","sourcesContent":["module.exports = {\n  /*  \n    FeildName = new Array(),\n    ConfigName = \"\",\n    Loaded = false,\n    Data = new Array(),\n*/\n  properties: {\n    //Rows: new Map()\n  },\n\n  LoadFromFile(fname, callback, arg) {\n    cc.loader.loadRes(\n      fname,\n      function(err, jsonAsset) {\n        this.Data = jsonAsset.json;\n        //console.log(JSON.stringify(jsonAsset.json));\n        this._onAfterLoaded();\n        if (callback) callback(arg);\n      }.bind(this)\n    );\n  },\n\n  _onAfterLoaded() {\n    //处理第一行\n    if (Array.isArray(this.Data)) {\n      this.FeildName = this.Data[0];\n      this.Loaded = true;\n    }\n  },\n\n  RowObject(index) {\n    index = index + 1;\n    if (index >= this.Data.length) return null;\n    var res = new Object();\n    let o = this.Data[index];\n    for (let i = 0; i < this.FeildName.length; i++) {\n      res[this.FeildName[i].toString()] = o[i];\n    }\n    return res;\n  },\n\n  //符合条件进入到数组中去\n  FindObject(result, kname, kvalue, n = 1) {\n    let j = 0;\n    for (let i = 0; i < this.Count(); i++) {\n      var o = RowObject(i);\n      if (o[kname] == kvalue) {\n        result.push(o);\n        j++;\n      }\n      if (n > 0 && j >= n) break;\n    }\n  },\n\n  //字段中包含的列出来\n  FindObjectIndexOf(result, kname, kvalue, n = 1) {\n    let j = 0;\n    for (let i = 0; i < this.Count(); i++) {\n      var o = RowObject(i);\n      if (o[kname].indexOf(kvalue) != -1) {\n        result.push(o);\n        j++;\n      }\n      if (n > 0 && j >= n) break;\n    }\n  },\n\n  Count() {\n    if (this.Data.length == 0) return 0;\n    return this.Data.length - 1;\n  },\n\n  FeildIndex(kname) {\n    if (Array.isArray(this.FeildName)) {\n      for (let i = 0; i < this.FeildName.length; i++) {\n        if (this.FeildName[i] == kname) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  },\n\n  ///////////////\n  // 下面用途不大\n  ///////////////\n  RowFeildValueFirst(kname, kvalue) {\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return null;\n    for (let r = 0; r < this.Data.length; r++) {\n      var o = this.Data[r];\n      if (o[idx] == kvalue) {\n        this.Current = o;\n        return o;\n      }\n    }\n    return null;\n  },\n\n  RowFeildValue(kname, kvalue) {\n    this.Select = new Array();\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return res;\n    for (let r = 0; r < this.Data; r++) {\n      var o = this.Data[r];\n      if (o[idx] == kvalue) {\n        this.Select.push(o);\n      }\n    }\n    return this.Select;\n  },\n\n  RowFeildValueFirstEx(kname, kvalue, ksecond) {\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return \"\";\n    for (let r = 0; r < this.Data.length; r++) {\n      let o = this.Data[r];\n      if (o[idx] == kvalue) {\n        let jx = this.FeildIndex(ksecond);\n        if (jx < 0) return \"\";\n        return o[jx];\n      }\n    }\n    return \"\";\n  }\n};\n\n//var XConfig = new AConfig();\n//export { AConfig };\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nimport { XGame } from \"./Game\";\nimport { XNet } from \"./Network\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    TryTick: 0,\n    Loading: cc.Prefab\n    // foo: {\n    //     // ATTRIBUTES:\n    //     default: null,        // The default value will be used only when the component attaching\n    //                           // to a node for the first time\n    //     type: cc.SpriteFrame, // optional, default is typeof default\n    //     serializable: true,   // optional, default is true\n    // },\n    // bar: {\n    //     get () {\n    //         return this._bar;\n    //     },\n    //     set (value) {\n    //         this._bar = value;\n    //     }\n    // },\n  },\n\n  createLoading() {\n    var n = cc.instantiate(this.Loading);\n    if (n) {\n      // let tipsCtrl = n.getComponent(\"TipsCtrl\");\n      // if (content && tipsCtrl) {\n      //   tipsCtrl.setContent(content);\n      // }\n      let sz = cc.director.getWinSize();\n      n.setPosition(sz.width / 2, sz.height / 2, 0);\n      n.parent = cc.director.getScene();\n      n.name = \"loading\";\n    }\n  },\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    this.createLoading();\n    //var loading = cc.instantiate(Loading);\n    //cc.director.getScene().addChild(loading);\n  },\n\n  start() {\n    this.TryTick = 1;\n    XGame.Where(this.cbWhere, this, this.TryTick);\n  },\n\n  cbWhere: function(who, response) {\n    //    console.log(response);\n    //    console.log(typeof who);\n    who.TryTick++;\n    //    console.log(who.TryTick);\n    if (response == null) {\n      XGame.Where(who.cbWhere, who.TryTick);\n    } else {\n      //进行热更新判断\n      XNet.dispatchXNet(\"GX_WHERE_R\", response);\n\n      who.WhereAfter();\n    }\n  },\n\n  WhereAfter: function() {\n    let v = cc.find(\"loading/ShowText\", cc.director.getScene());\n    if (v != null) {\n      let showText = v.getComponent(cc.Label);\n      if (showText != null) {\n        showText.string = \"成功获取游戏服务器位置\";\n      }\n    }\n    //console.log(\"222\", JSON.stringify(XGame.whereResult));\n    if (XGame.whereResult.rc != 0) {\n      //中部一直显示文本内容\n    } else {\n      XGame.Version(this.cbUpgrade, this);\n    }\n  },\n\n  //\n  cbUpgrade: function(who, response) {\n    //如果返回要求升级JS代码部分\n  }\n\n  // update (dt) {},\n});\n","//import { XNet } from \"./Network\";\n\nvar XGame = cc.Class({\n  extends: cc.Component,\n  statics: {\n    clientVersion: 10000, //客户端程序版本号\n    resVersion: 10000, //资源版本号\n    username: \"\",\n    password: \"\",\n    accid: \"\", //账号\n    aid: \"\", //角色编号\n    token: \"\", //令牌\n    whereResult: {}, //游戏服务位置\n    sdtime: 0, //和服务器之间的时间差 毫秒\n\n    whereUrl: [\n      \"http://where.9966886699.com/xx/\",\n      \"http://where.9966886699.com/xx/\",\n      \"http://where.9966886699.com/xx/\"\n    ],\n\n    //向服务获取游戏服务器位置\n    Where: function(callback, who, n) {\n      n = n % 3;\n      let url = \"http://where.9966886699.com/xx/\";\n      url = this.whereUrl[n];\n\n      //从位置中心查询游戏服务器位置 http post 获得\n      let req = {};\n      req.cmd = \"GX_WHERE\";\n      req.ver = \"1000\";\n      req.realm = \"android\";\n      //XNet.HttpPost(\"http://where.9966886699.com/xx/\", req);\n      var xhr = cc.loader.getXMLHttpRequest();\n      xhr.onreadystatechange = function() {\n        if (xhr.readyState === 4) {\n          //console.log(\"recv:\" + xhr.responseText);\n          if (xhr.status === 200) {\n            //收到内容后处理\n            XGame.whereResult = JSON.parse(xhr.responseText);\n            //console.log(\"====\", JSON.stringify(XGame.whereResult));\n            callback(who, xhr.responseText);\n          } else {\n            callback(who, null);\n          }\n        }\n      };\n      xhr.open(\"POST\", url);\n      xhr.timeout = 5000; //5 seconds for timeout\n      xhr.ontimeout = () => {\n        console.error(\"Timeout!!\");\n        callback(who, null);\n      };\n\n      xhr.send(JSON.stringify(req));\n    },\n\n    //向游戏服务器查询版本号\n    Version: function(callback, who) {\n      console.log(JSON.stringify(XGame.whereResult));\n\n      let url = \"http://where.9966886699.com/xx/\";\n      url = \"http://\" + XGame.whereResult.server[0] + \"/version\";\n      console.log(\"Version\", url);\n\n      //发送请求版本命令\n      let req = {};\n      req.cmd = \"GX_VERSION\";\n      req.aver = 1000;\n      var xhr = cc.loader.getXMLHttpRequest();\n      xhr.onreadystatechange = function() {\n        if (xhr.readyState === 4) {\n          console.log(\"recv:\" + xhr.responseText);\n          if (xhr.status === 200) {\n            //收到内容后处理\n            //XGame.whereResult = JSON.parse(xhr.responseText);\n            //console.log(\"====\", JSON.stringify(XGame.whereResult));\n            callback(who, xhr.responseText);\n          } else {\n            callback(who, null);\n          }\n        }\n      };\n      xhr.open(\"POST\", url);\n      xhr.timeout = 5000; //5 seconds for timeout\n      xhr.ontimeout = () => {\n        console.error(\"Timeout!!\");\n        callback(who, null);\n      };\n\n      xhr.send(JSON.stringify(req));\n    },\n\n    //这里实现逻辑帧\n    //dt 上一帧到本帧时间差\n    Update: function(dt) {}\n  }\n});\n\nexport { XGame };\n","import { XNet, XNetEvent } from \"./Network\";\nimport { XGame } from \"./Game\";\n\n//import \"./Config\";\nvar AConfig = require(\"Config\");\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Info: cc.Label,\n    WsHost: cc.EditBox,\n    CmdSend: cc.EditBox,\n    CmdResult: cc.EditBox,\n    Recv: cc.EditBox,\n    LastCmdName: \"\", //最后发出的命令名\n    RecvCount: 0,\n    LabRecvCount: cc.Label,\n    GmJson: { default: null, type: cc.JsonAsset },\n    ScrollItem: cc.Prefab,\n    ScrollCmd: cc.ScrollView\n    //GmConfig: new AConfig()\n  },\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    /*\n    if (event == XOpcodes.XC_NET_CONNECTED) {\n      this.auth();\n      return;\n    }*/\n    let cmdline = JSON.stringify(msg);\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.TxLog.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n    if (msg.cmd === this.LastCmdName + \"_R\") {\n      this.CmdResult.string = cmdline;\n    }\n\n    this.Recv.string = cmdline;\n    this.RecvCount++;\n    this.LabRecvCount.string = \"接收数据:\" + this.RecvCount.toString();\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  _onGmCmdClick(tar, cmdline, note) {\n    console.log(\"_onGmCmdClick:\" + cmdline);\n    tar.CmdSend.string = cmdline;\n    tar.CmdResult.string = note;\n  },\n\n  GmInsert(title, cmdline, note) {\n    var item = cc.instantiate(this.ScrollItem);\n    //这里是脚本组件的名字\n    //item.getComponent(\"RankItem\").init(i, playerInfo);\n    let sc = item.getComponent(\"ScriptGmCmd\");\n    if (sc) {\n      sc.SetData(this._onGmCmdClick, this, title, cmdline, note); //.bind(this);\n    }\n    this.ScrollCmd.content.addChild(item);\n  },\n\n  onLoad() {\n    this.Info.string = \"ud=\" + XGame.username + \":\" + XGame.password;\n\n    XNet.EarAdd(this);\n\n    /*    \n    for (var i = 0; i < 20; i++) {\n      var item = cc.instantiate(this.ScrollItem);\n      //这里是脚本组件的名字\n      //item.getComponent(\"RankItem\").init(i, playerInfo);\n      let sc = item.getComponent(\"ScriptGmCmd\");\n      if (sc) {\n        sc.SetData(this._onGmCmdClick, this, \"echo\" + i, \"echo\" + i, \"echo\"); //.bind(this);\n      }\n      this.ScrollCmd.content.addChild(item);\n      console.log(\"++:\" + i.toString());\n    }\n*/\n\n    cc.loader.loadRes(\n      \"db/gm_cmd\",\n      function(err, jsonAsset) {\n        this.GmJson = jsonAsset;\n        //console.log(JSON.stringify(jsonAsset.json));\n        this._onAfterGmJsonDBLoaded();\n      }.bind(this)\n    );\n\n    //this.GmConfig.LoadFromFile(\"db/gm_cmd\", this._onAfterGmConfig, this);\n    AConfig.LoadFromFile(\"db/gm_cmd\", this._onAfterGmConfig, this);\n  },\n\n  _onAfterGmConfig(arg) {\n    let v = AConfig.RowFeildValueFirstEx(\"ID\", \"10001\", \"NAME\");\n    console.log(\"++++++++++++++\" + v);\n    for (let i = 0; i < AConfig.Count(); i++) {\n      let o = AConfig.RowObject(i);\n      if (o) {\n        arg.GmInsert(o.NAME, o.CMDLINE, o.NOTE);\n      }\n    }\n  },\n\n  start() {},\n\n  _onAfterGmJsonDBLoaded() {\n    if (this.GmJson) {\n      //console.log(JSON.stringify(this.GmJson.json));\n      if (Array.isArray(this.GmJson.json)) {\n        //this.GmJson.json.forEach(function(item, index, array)\n        for (let i = 0; i < this.GmJson.json.length; i++) {\n          //console.log(item, index);\n          let j = this.GmJson.json[i];\n          console.log(JSON.stringify(j));\n        }\n      }\n    }\n  },\n\n  // update (dt) {},\n\n  ClickConnect() {\n    if (this.WsHost.string.length < 1) {\n      return;\n    }\n    //XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:8086/xx\");\n    XNet.Open();\n    /*\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n    */\n  },\n  ClickDisconnect() {\n    XNet.Close();\n  },\n  //服务器连接库\n  ClickWsLibrary() {},\n\n  //发出命令\n  ClickCmdSend() {\n    let cmdline = this.CmdSend.string;\n    console.log(\"cmdline:\" + cmdline);\n    try {\n      let msg = JSON.parse(cmdline);\n      this.LastCmdName = msg.cmd;\n      XNet.Send(cmdline);\n    } catch (e) {\n      this.CmdResult.string = e.message;\n    }\n  },\n\n  //\n  ClickScrollItem() {\n    //看属于行  json instanceof JSONArray\n  }\n});\n","//const TipsManager = require(\"./TipsManager.js\"); //浏览器会有问题\nimport { XNet, XNetEvent } from \"./Network\";\n//import { TipsManager } from \"./TipsManager\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    label: {\n      default: null,\n      type: cc.Label\n    },\n    labXhr: cc.Label,\n    NetReady: false,\n    appVer: cc.EditBox,\n    netEvListener: null,\n    netMsgListener: null,\n    CmdWait: null,\n    // defaults, set visually when attaching this script to the Canvas\n    text: \"准备就绪\",\n    tipsPrefab: cc.Prefab\n  },\n\n  ShowStory: function() {},\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.label.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n  },\n\n  netSocketEvent: function(msg, target) {\n    if (msg.cmd == XNetEvent.CONNECTED) {\n      //      target.WsHost.string = XNet.ws_host;\n      //      target.WsHost.node.color = cc.color(0, 255, 0, 100);\n      //      target.WsHost.node.opacity = 255;\n      target.NetReady = true;\n\n      if (target.CmdWait) {\n        XNet.Send(JSON.stringify(target.CmdWait));\n      }\n    }\n\n    if (\n      msg.cmd == XNetEvent.CONNECT_TIMEOUT ||\n      msg.cmd == XNetEvent.CONNECT_ERROR\n    ) {\n      target.label.string = \"网络连接错误\";\n    }\n\n    if (msg.cmd == XNetEvent.CONNECT) {\n      target.label.string = \"连接->\" + XNet.ws_host;\n      cc.director\n        .getScheduler()\n        .schedule(target.ConnectCheck, target, 6, 1, 6, false);\n    }\n  },\n\n  ConnectCheck: function() {\n    XNet.ConnectCheck(false);\n  },\n\n  _onAfterGetXMLHttpRequest: function(xhr) {\n    if (this.label) {\n      this.label.string = \"recv:\" + xhr.responseText;\n    }\n  },\n\n  UpdateGamePort: function() {\n    this._xhrXHR = null;\n    /*\n    cc.loader.load(\n      {\n        url: \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\",\n        type: \"json\"\n      },\n      function(err, text) {\n        console.log(\n          \"Should load a texture from RESTful API by specify the type: \",\n          text\n        );\n      }\n    );\n    */\n\n    let cav = cc.director.getScene().getChildByName(\"Canvas\");\n    let label = cav.getChildByName(\"LabelGamePort\");\n    if (label) {\n      let xlab = label.getComponent(cc.Label);\n      if (xlab) {\n        xlab.string = \"\";\n      }\n    }\n\n    var xhr = cc.loader.getXMLHttpRequest();\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status <= 207)) {\n        console.log(\"recv:\" + xhr.responseText);\n\n        if (label) {\n          let anim = label.getComponent(cc.Animation);\n          if (anim) {\n            anim.play(\"labGamePort\");\n          }\n          //label.node.color = cc.color(0, 255, 0, 255);\n          //label.node.visible = false;\n          let xlab = label.getComponent(cc.Label);\n          if (xlab) {\n            xlab.string = xhr.responseText;\n            console.log(\"========\" + label.string);\n          }\n        }\n        //this._onAfterGetXMLHttpRequest(xhr);\n      }\n    };\n    xhr.open(\"GET\", \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\");\n    xhr.timeout = 5000; //5 seconds for timeout\n    xhr.send();\n    this._xhrXHR = xhr;\n  },\n\n  UpdateGamePort1: function() {\n    var xhr = cc.loader.getXMLHttpRequest();\n    //    this.streamXHREventsToLabel(xhr, this.xhr, this.xhr, \"GET\");\n    //    var xhr = cc.loader.getXMLHttpRequest();\n\n    //xhr.open(\"GET\", url);\n    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status <= 207)) {\n        var response = xhr.responseText;\n        console.log(\"recv:\" + xhr.responseText);\n        //this.xhr.string = xhr.responseText;\n        //json 解析\n        var jsonData = JSON.parse(response);\n        var code = jsonData[\"code\"];\n        if (code == 1) {\n          //                self.successSprite.getComponent(cc.Animation).play('resAnimate');\n        }\n      }\n    };\n\n    xhr.open(\"GET\", \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\");\n    //set Content-type \"text/plain\" to post ArrayBuffer or ArrayBufferView\n    //xhr.setRequestHeader(\"Content-Type\",\"Application/json\");\n    // Uint8Array is an ArrayBufferView\n    xhr.timeout = 5000; //5 seconds for timeout\n    xhr.send();\n  },\n\n  // use this for initialization\n  onLoad: function() {\n    this.label.string = this.text;\n\n    this.netEvListener = { callback: this.netSocketEvent, target: this };\n    this.netMsgListener = { callback: this.netMsgProc, target: this };\n\n    XNet.EarAdd(this);\n    XNet.ListenerAdd(XNetEvent.CONNECTED, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_ERROR, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_TIMEOUT, this.netEvListener);\n\n    this.UpdateGamePort();\n  },\n\n  start() {\n    //TipsManager.init();\n  },\n\n  // called every frame\n  update: function(dt) {},\n\n  clickGameSwitch() {\n    //TipsManager.createTips(\"还没实现\");\n    this.createTips(\"还没实现\");\n  },\n\n  createTips(content) {\n    var n = cc.instantiate(this.tipsPrefab);\n    if (n) {\n      let tipsCtrl = n.getComponent(\"TipsCtrl\");\n      if (content && tipsCtrl) {\n        tipsCtrl.setContent(content);\n      }\n      n.parent = cc.director.getScene();\n    }\n  },\n\n  ClickAppBuild() {\n    //let ver =  appVer.string;\n    this.CmdWait = {\n      cmd: \"GX_APP_BUILD\",\n      ver: this.appVer.string,\n      app: \"XX\"\n    };\n\n    XNet.Close();\n    XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    XNet.Open();\n\n    this.label.string = \"build:\" + this.appVer.string;\n  },\n\n  ClickAppUpgradeTest() {\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.appVer.string,\n      app: \"XX\"\n    };\n    this.label.string = \"test-upgrade:\" + this.appVer.string;\n  },\n\n  ClickAppUpgradeAudit() {\n    //TipsManager.createTips(\"还没实现\");\n    this.createTips(\"还没实现\");\n  },\n  ClickGamePortWhere() {\n    this.UpdateGamePort();\n  }\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    ShowText: cc.Label\n    // foo: {\n    //     // ATTRIBUTES:\n    //     default: null,        // The default value will be used only when the component attaching\n    //                           // to a node for the first time\n    //     type: cc.SpriteFrame, // optional, default is typeof default\n    //     serializable: true,   // optional, default is true\n    // },\n    // bar: {\n    //     get () {\n    //         return this._bar;\n    //     },\n    //     set (value) {\n    //         this._bar = value;\n    //     }\n    // },\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n\n  start() {},\n\n  SetShowText: function(content) {\n    this.ShowText.string = content;\n  }\n\n  // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nimport { XGame } from \"./Game\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Username: cc.EditBox,\n    Password: cc.EditBox\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n\n  start() {},\n\n  ClickStart() {\n    XGame.username = this.Username.string;\n    XGame.password = this.Password.string;\n    cc.director.loadScene(\"gm\");\n  }\n\n  // update (dt) {},\n});\n","var WebSocket = WebSocket || window.WebSocket || window.MozWebSocket;\n\n//import { XOpcodes } from \"./Opcodes\";\n\n/*\nwebsocket 两种监听方式\n*/\n\nvar XNetEvent = {\n  CONNECT: \"XC_NET_CONNECT\",\n  CONNECT_ERROR: \"XC_NET_CONNECT_ERROR\",\n  CONNECT_TIMEOUT: \"XC_NET_CONNECT_TIMEOUT\",\n  CONNECTED: \"XC_NET_CONNECTED\",\n  CLOSE: \"XC_NET_CLOSE\"\n};\n\n//个人采用文本方式来收发数据\n//频率高的采用二进制数据进行收发 例如 移动数据包\n\nvar XNet = cc.Class({\n  extends: cc.Component,\n  statics: {\n    _socket: null,\n    ws_host: \"ws://test.9966886699.com:8086/game\",\n    _netPros: new Map(),\n    _netEars: new Array(),\n    _connectTimeout: 5,\n    _wsReConnectTimes: 0,\n    _reConnectFlag: false,\n    _reConnectMax: 3,\n\n    /**\n     * 发布收到事件消息\n     * event事件名\n     * msg 消息内容\n     */\n    dispatchXNet(event, msg) {\n      //        XGame.DoXEvent(event,msg);\n\n      this._netEars.forEach(function(item, index, array) {\n        item.netEvent(event, msg);\n      });\n\n      if (this._netPros[event]) {\n        var listeners = this._netPros[event].slice();\n        for (var i = 0; i < listeners.length; i++) {\n          listeners[i].callback(msg, listeners[i].target);\n        }\n      }\n    },\n\n    Host: function(uri) {\n      this.ws_host = uri;\n    },\n\n    Open: function() {\n      //console.log(\"ss:\" + this._socket.readyState);\n      if (this._socket == null) {\n        console.log(\"connect \" + this.ws_host);\n        //            if(this._socket!=null) delete this._socket;\n        this._socket = new WebSocket(this.ws_host);\n        this._socket.onopen = this._onOpen.bind(this);\n        this._socket.onerror = this._onError.bind(this);\n        this._socket.onclose = this._onClose.bind(this);\n        this._socket.onmessage = this._onMessage.bind(this);\n\n        //cc.director.getScheduler().schedule(this.connectTimeoutCheck,this,1, 5, 3,false);\n        this.dispatchXNet(XNetEvent.CONNECT, {\n          cmd: XNetEvent.CONNECT,\n          rc: 0\n        });\n      }\n      return this;\n    },\n\n    Close() {\n      if (this._socket != null) {\n        this._socket.close();\n        delete this._socket;\n        //        this._socket = nil;//这个不需要\n        //cc.director.getScheduler().\n        console.log(\"WebSocket is closed now.\");\n        XNet.dispatchXNet(XNetEvent.CLOSE, {\n          cmd: XNetEvent.CLOSE,\n          rc: 0\n        });\n      }\n    },\n\n    readyState() {\n      if (this._socket) return this._socket.readyState;\n      return -1;\n    },\n\n    _onOpen: function(event) {\n      console.log(\"connected \" + this.ws_host);\n      //utils.OutObj(evt);\n      //var event = new cc.Event(this,\"Network\",true);\n      //event.setUserData(\"{...}\");\n      //cc.eventTarget.dispatchEvent(event);\n      // cc.EventTarget.dispatchEvent(\"adas\",\"123\",evt);\n\n      //\n      //cc.eventManager.dispatchCustomEvent(\"XNetOpened\", {a:1,b:2});\n\n      //var event=new cc.EventCustom(\"XNetOpened\");\n      //cc.SystemEvent.dispatchCustomEvent(event);\n      this.dispatchXNet(XNetEvent.CONNECTED, {\n        cmd: XNetEvent.CONNECTED,\n        rc: 0\n      });\n    },\n\n    _onError: function(event) {\n      XNet.dispatchXNet(XNetEvent.CONNECT_ERROR, {\n        cmd: XNetEvent.CONNECT_ERROR,\n        rc: event\n      });\n      console.error(\"WebSocket error observed:\", event);\n    },\n\n    _onClose: function(event) {\n      console.log(\"WebSocket is closed now.\");\n      XNet.dispatchXNet(XNetEvent.CLOSE, {\n        cmd: XNetEvent.CLOSE,\n        rc: 0\n      });\n\n      // if (this._socket) {\n      //   delete this._socket;\n      //   this._socket = null;\n      // }\n    },\n\n    _onMessage: function(event) {\n      console.log(\"WebSocket message received:\" + event.data);\n      let msg = JSON.parse(event.data);\n      //console.log(msg.cmd);\n      XNet.dispatchXNet(msg.cmd, msg);\n    },\n\n    /**\n     * 添加监听\n     */\n    ListenerAdd(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (!listenerList) listenerList = this._netPros[event] = new Array();\n      for (var i = 0; i < listenerList.length; i++) {\n        if (listenerList[i] == callback) return;\n      }\n      listenerList.push(callback);\n    },\n\n    ListenerRemove(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (listenerList) {\n        for (var i = 0; i < listenerList.length; i++) {\n          if (listenerList[i] == callback) {\n            listenerList.splice(i, 1);\n            return;\n          }\n        }\n      }\n    },\n\n    EarAdd(ear) {\n      this._netEars.push(ear);\n    },\n\n    EarRemove(ear) {\n      let pos = this._netEars.indexOf(ear);\n      this._netEars.splice(pos, 1);\n    },\n\n    ConnectCheck: function(flagReconn) {\n      if (this._socket == null) return;\n\n      if (this._socket.readyState == WebSocket.CONNECTING) {\n        console.log(\"websocket connect timeout\");\n        XNet.dispatchXNet(XNetEvent.CONNECT_TIMEOUT, {\n          cmd: XNetEvent.CONNECT_TIMEOUT,\n          rc: 0\n        });\n        if (flagReconn) this.Open();\n      }\n\n      if (this._socket.readyState == WebSocket.CLOSED) {\n        console.log(\"websocket reconnect\");\n        //this.connect();\n      }\n    },\n\n    Send: function(text) {\n      if (!this._socket) return;\n      if (this._socket.readyState == WebSocket.OPEN) {\n        this._socket.send(text);\n      }\n    }\n  }\n});\n\nexport { XNet, XNetEvent };\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Name: cc.Label\n    //    Cmdline: \"\",\n    //    Note: \"\"\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  SetData(callback, target, title, cmdline, note) {\n    this.Target = target;\n    this.Callback = callback;\n    this.Name.string = title;\n    this.Cmdline = cmdline;\n    this.Note = note;\n  },\n\n  // onLoad () {},\n  Click() {\n    if (this.Callback) {\n      this.Callback(this.Target, this.Cmdline, this.Note);\n    }\n  },\n\n  start() {}\n\n  // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    ShowText: cc.Label\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n  onDestroySelf() {\n    this.node.destroy();\n  },\n\n  onEnable() {\n    //let sz = this.node.parent.getSize();\n    let sz = cc.director.getWinSize();\n    this.node.setPosition(sz.width / 2, sz.height / 2, 0);\n  },\n\n  start() {},\n\n  setContent(text) {\n    if (text) this.ShowText.string = text;\n    //this.getScheduler().schedule(this.AutoRemove, this, 1, 1, 3, false);\n    //this.runAction()\n    //cc.director.getScheduler().schedule(this.AutoRemove, this, 1, 1, 3, false);\n  },\n\n  AutoRemove() {\n    this.node.parent.removeChild(this.node);\n  }\n\n  // update (dt) {},\n});\n","cc.Class({\n  extends: cc.Component,\n  properties: {\n    tispPrefab: cc.Prefab\n  },\n\n  init() {\n    if (this.tipsPrefab) return;\n\n    // cc.loader.loadRes(\"tips/Tips\", (err, prefab) => {\n    //   this.tipsPrefab = prefab;\n    // });\n    console.log(\"tips prefab ok\");\n  },\n\n  createTips(content) {\n    var n = cc.instantiate(this.tipsPrefab);\n    if (n) {\n      let tipsCtrl = n.getComponent(\"TipsCtrl\");\n      if (content && tipsCtrl) {\n        tipsCtrl.setContent(content);\n      }\n      n.parent = cc.director.getScene();\n    }\n  }\n});\n","import { XNet, XNetEvent } from \"./Network\";\n\n//import { TipsManager } from \"./TipsManager\";\n//const TipsManager = require(\"./TipsManager\");\n\n// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    netEvListener: null,\n    netMsgListener: null,\n    Version: cc.EditBox,\n    WsHost: cc.Label,\n    TxLog: cc.Label,\n    NetReady: Boolean,\n    CmdWait: null\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    /*\n    if (event == XOpcodes.XC_NET_CONNECTED) {\n      this.auth();\n      return;\n    }*/\n\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.TxLog.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n  },\n\n  netSocketEvent: function(msg, target) {\n    if (msg.cmd == XNetEvent.CONNECTED) {\n      target.WsHost.string = XNet.ws_host;\n      target.WsHost.node.color = cc.color(0, 255, 0, 100);\n      target.WsHost.node.opacity = 255;\n      target.NetReady = true;\n\n      if (target.CmdWait) {\n        XNet.Send(JSON.stringify(target.CmdWait));\n      }\n    }\n\n    if (\n      msg.cmd == XNetEvent.CONNECT_TIMEOUT ||\n      msg.cmd == XNetEvent.CONNECT_ERROR\n    ) {\n      target.TxLog.string = \"网络连接错误\";\n    }\n\n    if (msg.cmd == XNetEvent.CONNECT) {\n      target.TxLog.string = \"连接->\" + XNet.ws_host;\n      cc.director\n        .getScheduler()\n        .schedule(target.ConnectCheck, target, 6, 1, 6, false);\n    }\n  },\n\n  ConnectCheck: function() {\n    XNet.ConnectCheck(false);\n  },\n\n  netMsgProc: function(msg, target) {},\n\n  onLoad() {\n    this.netEvListener = { callback: this.netSocketEvent, target: this };\n    this.netMsgListener = { callback: this.netMsgProc, target: this };\n\n    XNet.EarAdd(this);\n    XNet.ListenerAdd(XNetEvent.CONNECTED, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_ERROR, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_TIMEOUT, this.netEvListener);\n\n    //XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    //XNet.Open();\n  },\n\n  start() {},\n\n  ClickBuild() {\n    this.CmdWait = {\n      cmd: \"GX_APP_BUILD\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n\n    XNet.Close();\n    XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    XNet.Open();\n\n    //let ver = this.Version.string;\n    //console.log(\"build...\" + JSON.stringify(scmd));\n    //XNet.Send(JSON.stringify(scmd));\n  },\n\n  ClickTestUpgrade() {\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n  },\n\n  ClickAuditInstall() {\n    XNet.Close();\n    XNet.Host(\"ws://app.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n  },\n\n  ClickGameSwitchPort() {\n    //console.log(\"ClickGameSwitchPort\");\n    //TipsManager.CreateTips(\"现不支持\");\n  },\n\n  ClickAuditPass() {}\n\n  // update (dt) {},\n});\n"],"sourceRoot":"/source/","file":"project.js"}