{"version":3,"sources":["assets/Script/Config.js","assets/Script/Game.js","assets/Script/Gm.js","assets/Script/HelloWorld.js","assets/Script/Login.js","assets/Script/Network.js","assets/prefab/item/ScriptGmCmd.js","assets/Script/TipsCtrl.js","assets/Script/TipsManager.js","assets/Script/main.js"],"names":["module","exports","properties","LoadFromFile","fname","callback","arg","cc","loader","loadRes","err","jsonAsset","this","Data","json","_onAfterLoaded","bind","Array","isArray","FeildName","Loaded","RowObject","index","length","res","Object","o","i","toString","FindObject","result","kname","kvalue","n","arguments","undefined","j","Count","push","FindObjectIndexOf","indexOf","FeildIndex","RowFeildValueFirst","idx","r","Current","RowFeildValue","Select","RowFeildValueFirstEx","ksecond","jx","XGame","username","password","_Network","require","_Game","AConfig","Class","extends","Component","Info","Label","WsHost","EditBox","CmdSend","CmdResult","Recv","LastCmdName","RecvCount","LabRecvCount","GmJson","default","type","JsonAsset","ScrollItem","Prefab","ScrollCmd","ScrollView","netEvent","event","msg","cmdline","JSON","stringify","TxLog","string","text","console","log","cmd","_onGmCmdClick","tar","note","GmInsert","title","item","instantiate","sc","getComponent","SetData","content","addChild","onLoad","XNet","EarAdd","_onAfterGmJsonDBLoaded","_onAfterGmConfig","v","NAME","CMDLINE","NOTE","start","ClickConnect","Close","Host","Open","ClickDisconnect","ClickWsLibrary","ClickCmdSend","parse","Send","e","message","ClickScrollItem","label","labXhr","NetReady","appVer","netEvListener","netMsgListener","CmdWait","tipsPrefab","netSocketEvent","target","XNetEvent","CONNECTED","CONNECT_TIMEOUT","CONNECT_ERROR","CONNECT","ws_host","director","getScheduler","schedule","ConnectCheck","_onAfterGetXMLHttpRequest","xhr","responseText","UpdateGamePort","_xhrXHR","getScene","getChildByName","xlab","getXMLHttpRequest","onreadystatechange","readyState","status","anim","Animation","play","_xlab","open","timeout","send","UpdateGamePort1","setRequestHeader","response","netMsgProc","ListenerAdd","update","dt","clickGameSwitch","createTips","tipsCtrl","setContent","parent","ClickAppBuild","ver","app","ClickAppUpgradeTest","ClickAppUpgradeAudit","ClickGamePortWhere","Username","Password","ClickStart","loadScene","WebSocket","window","MozWebSocket","CLOSE","statics","_socket","_netPros","Map","_netEars","_connectTimeout","_wsReConnectTimes","_reConnectFlag","_reConnectMax","dispatchXNet","forEach","array","listeners","slice","uri","OPEN","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_onMessage","rc","error","data","listenerList","ListenerRemove","splice","ear","EarRemove","pos","flagReconn","CONNECTING","CLOSED","Name","Target","Callback","Cmdline","Note","Click","ShowText","onDestroySelf","node","destroy","onEnable","sz","getWinSize","setPosition","width","height","AutoRemove","removeChild","tispPrefab","init","Version","Boolean","color","opacity","ClickBuild","ClickTestUpgrade","ClickAuditInstall","ClickGameSwitchPort","ClickAuditPass"],"mappings":"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","sourcesContent":["module.exports = {\n  /*  \n    FeildName = new Array(),\n    ConfigName = \"\",\n    Loaded = false,\n    Data = new Array(),\n*/\n  properties: {\n    //Rows: new Map()\n  },\n\n  LoadFromFile(fname, callback, arg) {\n    cc.loader.loadRes(\n      fname,\n      function(err, jsonAsset) {\n        this.Data = jsonAsset.json;\n        //console.log(JSON.stringify(jsonAsset.json));\n        this._onAfterLoaded();\n        if (callback) callback(arg);\n      }.bind(this)\n    );\n  },\n\n  _onAfterLoaded() {\n    //处理第一行\n    if (Array.isArray(this.Data)) {\n      this.FeildName = this.Data[0];\n      this.Loaded = true;\n    }\n  },\n\n  RowObject(index) {\n    index = index + 1;\n    if (index >= this.Data.length) return null;\n    var res = new Object();\n    let o = this.Data[index];\n    for (let i = 0; i < this.FeildName.length; i++) {\n      res[this.FeildName[i].toString()] = o[i];\n    }\n    return res;\n  },\n\n  //符合条件进入到数组中去\n  FindObject(result, kname, kvalue, n = 1) {\n    let j = 0;\n    for (let i = 0; i < this.Count(); i++) {\n      var o = RowObject(i);\n      if (o[kname] == kvalue) {\n        result.push(o);\n        j++;\n      }\n      if (n > 0 && j >= n) break;\n    }\n  },\n\n  //字段中包含的列出来\n  FindObjectIndexOf(result, kname, kvalue, n = 1) {\n    let j = 0;\n    for (let i = 0; i < this.Count(); i++) {\n      var o = RowObject(i);\n      if (o[kname].indexOf(kvalue) != -1) {\n        result.push(o);\n        j++;\n      }\n      if (n > 0 && j >= n) break;\n    }\n  },\n\n  Count() {\n    if (this.Data.length == 0) return 0;\n    return this.Data.length - 1;\n  },\n\n  FeildIndex(kname) {\n    if (Array.isArray(this.FeildName)) {\n      for (let i = 0; i < this.FeildName.length; i++) {\n        if (this.FeildName[i] == kname) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  },\n\n  ///////////////\n  // 下面用途不大\n  ///////////////\n  RowFeildValueFirst(kname, kvalue) {\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return null;\n    for (let r = 0; r < this.Data.length; r++) {\n      var o = this.Data[r];\n      if (o[idx] == kvalue) {\n        this.Current = o;\n        return o;\n      }\n    }\n    return null;\n  },\n\n  RowFeildValue(kname, kvalue) {\n    this.Select = new Array();\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return res;\n    for (let r = 0; r < this.Data; r++) {\n      var o = this.Data[r];\n      if (o[idx] == kvalue) {\n        this.Select.push(o);\n      }\n    }\n    return this.Select;\n  },\n\n  RowFeildValueFirstEx(kname, kvalue, ksecond) {\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return \"\";\n    for (let r = 0; r < this.Data.length; r++) {\n      let o = this.Data[r];\n      if (o[idx] == kvalue) {\n        let jx = this.FeildIndex(ksecond);\n        if (jx < 0) return \"\";\n        return o[jx];\n      }\n    }\n    return \"\";\n  }\n};\n\n//var XConfig = new AConfig();\n//export { AConfig };\n","var XGame = {\n  username: \"\",\n  password: \"\"\n};\n\nexport { XGame };\n","import { XNet, XNetEvent } from \"./Network\";\nimport { XGame } from \"./Game\";\n\n//import \"./Config\";\nvar AConfig = require(\"Config\");\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Info: cc.Label,\n    WsHost: cc.EditBox,\n    CmdSend: cc.EditBox,\n    CmdResult: cc.EditBox,\n    Recv: cc.EditBox,\n    LastCmdName: \"\", //最后发出的命令名\n    RecvCount: 0,\n    LabRecvCount: cc.Label,\n    GmJson: { default: null, type: cc.JsonAsset },\n    ScrollItem: cc.Prefab,\n    ScrollCmd: cc.ScrollView\n    //GmConfig: new AConfig()\n  },\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    /*\n    if (event == XOpcodes.XC_NET_CONNECTED) {\n      this.auth();\n      return;\n    }*/\n    let cmdline = JSON.stringify(msg);\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.TxLog.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n    if (msg.cmd === this.LastCmdName + \"_R\") {\n      this.CmdResult.string = cmdline;\n    }\n\n    this.Recv.string = cmdline;\n    this.RecvCount++;\n    this.LabRecvCount.string = \"接收数据:\" + this.RecvCount.toString();\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  _onGmCmdClick(tar, cmdline, note) {\n    console.log(\"_onGmCmdClick:\" + cmdline);\n    tar.CmdSend.string = cmdline;\n    tar.CmdResult.string = note;\n  },\n\n  GmInsert(title, cmdline, note) {\n    var item = cc.instantiate(this.ScrollItem);\n    //这里是脚本组件的名字\n    //item.getComponent(\"RankItem\").init(i, playerInfo);\n    let sc = item.getComponent(\"ScriptGmCmd\");\n    if (sc) {\n      sc.SetData(this._onGmCmdClick, this, title, cmdline, note); //.bind(this);\n    }\n    this.ScrollCmd.content.addChild(item);\n  },\n\n  onLoad() {\n    this.Info.string = \"ud=\" + XGame.username + \":\" + XGame.password;\n\n    XNet.EarAdd(this);\n\n    /*    \n    for (var i = 0; i < 20; i++) {\n      var item = cc.instantiate(this.ScrollItem);\n      //这里是脚本组件的名字\n      //item.getComponent(\"RankItem\").init(i, playerInfo);\n      let sc = item.getComponent(\"ScriptGmCmd\");\n      if (sc) {\n        sc.SetData(this._onGmCmdClick, this, \"echo\" + i, \"echo\" + i, \"echo\"); //.bind(this);\n      }\n      this.ScrollCmd.content.addChild(item);\n      console.log(\"++:\" + i.toString());\n    }\n*/\n\n    cc.loader.loadRes(\n      \"db/gm_cmd\",\n      function(err, jsonAsset) {\n        this.GmJson = jsonAsset;\n        //console.log(JSON.stringify(jsonAsset.json));\n        this._onAfterGmJsonDBLoaded();\n      }.bind(this)\n    );\n\n    //this.GmConfig.LoadFromFile(\"db/gm_cmd\", this._onAfterGmConfig, this);\n    AConfig.LoadFromFile(\"db/gm_cmd\", this._onAfterGmConfig, this);\n  },\n\n  _onAfterGmConfig(arg) {\n    let v = AConfig.RowFeildValueFirstEx(\"ID\", \"10001\", \"NAME\");\n    console.log(\"++++++++++++++\" + v);\n    for (let i = 0; i < AConfig.Count(); i++) {\n      let o = AConfig.RowObject(i);\n      if (o) {\n        arg.GmInsert(o.NAME, o.CMDLINE, o.NOTE);\n      }\n    }\n  },\n\n  start() {},\n\n  _onAfterGmJsonDBLoaded() {\n    if (this.GmJson) {\n      //console.log(JSON.stringify(this.GmJson.json));\n      if (Array.isArray(this.GmJson.json)) {\n        //this.GmJson.json.forEach(function(item, index, array)\n        for (let i = 0; i < this.GmJson.json.length; i++) {\n          //console.log(item, index);\n          let j = this.GmJson.json[i];\n          console.log(JSON.stringify(j));\n        }\n      }\n    }\n  },\n\n  // update (dt) {},\n\n  ClickConnect() {\n    if (this.WsHost.string.length < 1) {\n      return;\n    }\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:8086/xx\");\n    XNet.Open();\n    /*\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n    */\n  },\n  ClickDisconnect() {\n    XNet.Close();\n  },\n  //服务器连接库\n  ClickWsLibrary() {},\n\n  //发出命令\n  ClickCmdSend() {\n    let cmdline = this.CmdSend.string;\n    console.log(\"cmdline:\" + cmdline);\n    try {\n      let msg = JSON.parse(cmdline);\n      this.LastCmdName = msg.cmd;\n      XNet.Send(cmdline);\n    } catch (e) {\n      this.CmdResult.string = e.message;\n    }\n  },\n\n  //\n  ClickScrollItem() {\n    //看属于行  json instanceof JSONArray\n  }\n});\n","//const TipsManager = require(\"./TipsManager.js\"); //浏览器会有问题\nimport { XNet, XNetEvent } from \"./Network\";\n//import { TipsManager } from \"./TipsManager\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    label: {\n      default: null,\n      type: cc.Label\n    },\n    labXhr: cc.Label,\n    NetReady: false,\n    appVer: cc.EditBox,\n    netEvListener: null,\n    netMsgListener: null,\n    CmdWait: null,\n    // defaults, set visually when attaching this script to the Canvas\n    text: \"准备就绪\",\n    tipsPrefab: cc.Prefab\n  },\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.label.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n  },\n\n  netSocketEvent: function(msg, target) {\n    if (msg.cmd == XNetEvent.CONNECTED) {\n      //      target.WsHost.string = XNet.ws_host;\n      //      target.WsHost.node.color = cc.color(0, 255, 0, 100);\n      //      target.WsHost.node.opacity = 255;\n      target.NetReady = true;\n\n      if (target.CmdWait) {\n        XNet.Send(JSON.stringify(target.CmdWait));\n      }\n    }\n\n    if (\n      msg.cmd == XNetEvent.CONNECT_TIMEOUT ||\n      msg.cmd == XNetEvent.CONNECT_ERROR\n    ) {\n      target.label.string = \"网络连接错误\";\n    }\n\n    if (msg.cmd == XNetEvent.CONNECT) {\n      target.label.string = \"连接->\" + XNet.ws_host;\n      cc.director\n        .getScheduler()\n        .schedule(target.ConnectCheck, target, 6, 1, 6, false);\n    }\n  },\n\n  ConnectCheck: function() {\n    XNet.ConnectCheck(false);\n  },\n\n  _onAfterGetXMLHttpRequest: function(xhr) {\n    if (this.label) {\n      this.label.string = \"recv:\" + xhr.responseText;\n    }\n  },\n\n  UpdateGamePort: function() {\n    this._xhrXHR = null;\n    /*\n    cc.loader.load(\n      {\n        url: \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\",\n        type: \"json\"\n      },\n      function(err, text) {\n        console.log(\n          \"Should load a texture from RESTful API by specify the type: \",\n          text\n        );\n      }\n    );\n    */\n\n    let cav = cc.director.getScene().getChildByName(\"Canvas\");\n    let label = cav.getChildByName(\"LabelGamePort\");\n    if (label) {\n      let xlab = label.getComponent(cc.Label);\n      if (xlab) {\n        xlab.string = \"\";\n      }\n    }\n\n    var xhr = cc.loader.getXMLHttpRequest();\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status <= 207)) {\n        console.log(\"recv:\" + xhr.responseText);\n\n        if (label) {\n          let anim = label.getComponent(cc.Animation);\n          if (anim) {\n            anim.play(\"labGamePort\");\n          }\n          //label.node.color = cc.color(0, 255, 0, 255);\n          //label.node.visible = false;\n          let xlab = label.getComponent(cc.Label);\n          if (xlab) {\n            xlab.string = xhr.responseText;\n            console.log(\"========\" + label.string);\n          }\n        }\n        //this._onAfterGetXMLHttpRequest(xhr);\n      }\n    };\n    xhr.open(\"GET\", \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\");\n    xhr.timeout = 5000; //5 seconds for timeout\n    xhr.send();\n    this._xhrXHR = xhr;\n  },\n\n  UpdateGamePort1: function() {\n    var xhr = cc.loader.getXMLHttpRequest();\n    //    this.streamXHREventsToLabel(xhr, this.xhr, this.xhr, \"GET\");\n    //    var xhr = cc.loader.getXMLHttpRequest();\n\n    //xhr.open(\"GET\", url);\n    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status <= 207)) {\n        var response = xhr.responseText;\n        console.log(\"recv:\" + xhr.responseText);\n        //this.xhr.string = xhr.responseText;\n        //json 解析\n        var jsonData = JSON.parse(response);\n        var code = jsonData[\"code\"];\n        if (code == 1) {\n          //                self.successSprite.getComponent(cc.Animation).play('resAnimate');\n        }\n      }\n    };\n\n    xhr.open(\"GET\", \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\");\n    //set Content-type \"text/plain\" to post ArrayBuffer or ArrayBufferView\n    //xhr.setRequestHeader(\"Content-Type\",\"Application/json\");\n    // Uint8Array is an ArrayBufferView\n    xhr.timeout = 5000; //5 seconds for timeout\n    xhr.send();\n  },\n\n  // use this for initialization\n  onLoad: function() {\n    this.label.string = this.text;\n\n    this.netEvListener = { callback: this.netSocketEvent, target: this };\n    this.netMsgListener = { callback: this.netMsgProc, target: this };\n\n    XNet.EarAdd(this);\n    XNet.ListenerAdd(XNetEvent.CONNECTED, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_ERROR, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_TIMEOUT, this.netEvListener);\n\n    this.UpdateGamePort();\n  },\n\n  start() {\n    //TipsManager.init();\n  },\n\n  // called every frame\n  update: function(dt) {},\n\n  clickGameSwitch() {\n    //TipsManager.createTips(\"还没实现\");\n    this.createTips(\"还没实现\");\n  },\n\n  createTips(content) {\n    var n = cc.instantiate(this.tipsPrefab);\n    if (n) {\n      let tipsCtrl = n.getComponent(\"TipsCtrl\");\n      if (content && tipsCtrl) {\n        tipsCtrl.setContent(content);\n      }\n      n.parent = cc.director.getScene();\n    }\n  },\n\n  ClickAppBuild() {\n    //let ver =  appVer.string;\n    this.CmdWait = {\n      cmd: \"GX_APP_BUILD\",\n      ver: this.appVer.string,\n      app: \"XX\"\n    };\n\n    XNet.Close();\n    XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    XNet.Open();\n\n    this.label.string = \"build:\" + this.appVer.string;\n  },\n\n  ClickAppUpgradeTest() {\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.appVer.string,\n      app: \"XX\"\n    };\n    this.label.string = \"test-upgrade:\" + this.appVer.string;\n  },\n\n  ClickAppUpgradeAudit() {\n    //TipsManager.createTips(\"还没实现\");\n    this.createTips(\"还没实现\");\n  },\n  ClickGamePortWhere() {\n    this.UpdateGamePort();\n  }\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nimport { XGame } from \"./Game\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Username: cc.EditBox,\n    Password: cc.EditBox\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n\n  start() {},\n\n  ClickStart() {\n    XGame.username = this.Username.string;\n    XGame.password = this.Password.string;\n    cc.director.loadScene(\"gm\");\n  }\n\n  // update (dt) {},\n});\n","var WebSocket = WebSocket || window.WebSocket || window.MozWebSocket;\n\n//import { XOpcodes } from \"./Opcodes\";\n\nvar XNetEvent = {\n  CONNECT: \"XC_NET_CONNECT\",\n  CONNECT_ERROR: \"XC_NET_CONNECT_ERROR\",\n  CONNECT_TIMEOUT: \"XC_NET_CONNECT_TIMEOUT\",\n  CONNECTED: \"XC_NET_CONNECTED\",\n  CLOSE: \"XC_NET_CLOSE\"\n};\n\n//个人采用文本方式来收发数据\n//频率高的采用二进制数据进行收发 例如 移动数据包\n\nvar XNet = cc.Class({\n  extends: cc.Component,\n  statics: {\n    _socket: {},\n    ws_host: \"ws://test.9966886699.com:8086/game\",\n    _netPros: new Map(),\n    _netEars: new Array(),\n    _connectTimeout: 5,\n    _wsReConnectTimes: 0,\n    _reConnectFlag: false,\n    _reConnectMax: 3,\n\n    dispatchXNet(event, msg) {\n      //        XGame.DoXEvent(event,msg);\n\n      this._netEars.forEach(function(item, index, array) {\n        item.netEvent(event, msg);\n      });\n\n      if (this._netPros[event]) {\n        var listeners = this._netPros[event].slice();\n        for (var i = 0; i < listeners.length; i++) {\n          listeners[i].callback(msg, listeners[i].target);\n        }\n      }\n    },\n\n    Host: function(uri) {\n      this.ws_host = uri;\n    },\n\n    Open: function() {\n      if (this._socket == null || this._socket.readyState != WebSocket.OPEN) {\n        console.log(\"connect \" + this.ws_host);\n        //            if(this._socket!=null) delete this._socket;\n\n        this._socket = new WebSocket(this.ws_host);\n        this._socket.onopen = this._onOpen.bind(this);\n        this._socket.onerror = this._onError.bind(this);\n        this._socket.onclose = this._onClose.bind(this);\n        this._socket.onmessage = this._onMessage.bind(this);\n\n        //cc.director.getScheduler().schedule(this.connectTimeoutCheck,this,1, 5, 3,false);\n        this.dispatchXNet(XNetEvent.CONNECT, {\n          cmd: XNetEvent.CONNECT,\n          rc: 0\n        });\n      }\n      return this;\n    },\n\n    Close() {\n      if (this._socket && this._socket.readyState == 1) {\n        delete this._socket;\n        //        this._socket = nil;//这个不需要\n        //cc.director.getScheduler().\n      }\n    },\n\n    readyState() {\n      if (this._socket) return this._socket.readyState;\n      return -1;\n    },\n\n    _onOpen: function(event) {\n      console.log(\"connected \" + this.ws_host);\n      //utils.OutObj(evt);\n      //var event = new cc.Event(this,\"Network\",true);\n      //event.setUserData(\"{...}\");\n      //cc.eventTarget.dispatchEvent(event);\n      // cc.EventTarget.dispatchEvent(\"adas\",\"123\",evt);\n\n      //\n      //cc.eventManager.dispatchCustomEvent(\"XNetOpened\", {a:1,b:2});\n\n      //var event=new cc.EventCustom(\"XNetOpened\");\n      //cc.SystemEvent.dispatchCustomEvent(event);\n      this.dispatchXNet(XNetEvent.CONNECTED, {\n        cmd: XNetEvent.CONNECTED,\n        rc: 0\n      });\n    },\n\n    _onError: function(event) {\n      XNet.dispatchXNet(XNetEvent.CONNECT_ERROR, {\n        cmd: XNetEvent.CONNECT_ERROR,\n        rc: event\n      });\n      console.error(\"WebSocket error observed:\", event);\n    },\n\n    _onClose: function(event) {\n      console.log(\"WebSocket is closed now.\");\n      XNet.dispatchXNet(XNetEvent.CLOSE, {\n        cmd: XNetEvent.CLOSE,\n        rc: 0\n      });\n    },\n\n    _onMessage: function(event) {\n      console.log(\"WebSocket message received:\" + event.data);\n      let msg = JSON.parse(event.data);\n      //console.log(msg.cmd);\n      XNet.dispatchXNet(msg.cmd, msg);\n    },\n\n    ListenerAdd(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (!listenerList) listenerList = this._netPros[event] = new Array();\n      for (var i = 0; i < listenerList.length; i++) {\n        if (listenerList[i] == callback) return;\n      }\n      listenerList.push(callback);\n    },\n\n    ListenerRemove(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (listenerList) {\n        for (var i = 0; i < listenerList.length; i++) {\n          if (listenerList[i] == callback) {\n            listenerList.splice(i, 1);\n            return;\n          }\n        }\n      }\n    },\n\n    EarAdd(ear) {\n      this._netEars.push(ear);\n    },\n\n    EarRemove(ear) {\n      let pos = this._netEars.indexOf(ear);\n      this._netEars.splice(pos, 1);\n    },\n\n    ConnectCheck: function(flagReconn) {\n      if (this._socket == null) return;\n\n      if (this._socket.readyState == WebSocket.CONNECTING) {\n        console.log(\"websocket connect timeout\");\n        XNet.dispatchXNet(XNetEvent.CONNECT_TIMEOUT, {\n          cmd: XNetEvent.CONNECT_TIMEOUT,\n          rc: 0\n        });\n        if (flagReconn) this.Open();\n      }\n\n      if (this._socket.readyState == WebSocket.CLOSED) {\n        console.log(\"websocket reconnect\");\n        //this.connect();\n      }\n    },\n\n    Send: function(text) {\n      if (!this._socket) return;\n      if (this._socket.readyState == WebSocket.OPEN) {\n        this._socket.send(text);\n      }\n    }\n  }\n});\n\nexport { XNet, XNetEvent };\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Name: cc.Label\n    //    Cmdline: \"\",\n    //    Note: \"\"\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  SetData(callback, target, title, cmdline, note) {\n    this.Target = target;\n    this.Callback = callback;\n    this.Name.string = title;\n    this.Cmdline = cmdline;\n    this.Note = note;\n  },\n\n  // onLoad () {},\n  Click() {\n    if (this.Callback) {\n      this.Callback(this.Target, this.Cmdline, this.Note);\n    }\n  },\n\n  start() {}\n\n  // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    ShowText: cc.Label\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n  onDestroySelf() {\n    this.node.destroy();\n  },\n\n  onEnable() {\n    //let sz = this.node.parent.getSize();\n    let sz = cc.director.getWinSize();\n    this.node.setPosition(sz.width / 2, sz.height / 2, 0);\n  },\n\n  start() {},\n\n  setContent(text) {\n    if (text) this.ShowText.string = text;\n    //this.getScheduler().schedule(this.AutoRemove, this, 1, 1, 3, false);\n    //this.runAction()\n    //cc.director.getScheduler().schedule(this.AutoRemove, this, 1, 1, 3, false);\n  },\n\n  AutoRemove() {\n    this.node.parent.removeChild(this.node);\n  }\n\n  // update (dt) {},\n});\n","cc.Class({\n  extends: cc.Component,\n  properties: {\n    tispPrefab: cc.Prefab\n  },\n\n  init() {\n    if (this.tipsPrefab) return;\n\n    // cc.loader.loadRes(\"tips/Tips\", (err, prefab) => {\n    //   this.tipsPrefab = prefab;\n    // });\n    console.log(\"tips prefab ok\");\n  },\n\n  createTips(content) {\n    var n = cc.instantiate(this.tipsPrefab);\n    if (n) {\n      let tipsCtrl = n.getComponent(\"TipsCtrl\");\n      if (content && tipsCtrl) {\n        tipsCtrl.setContent(content);\n      }\n      n.parent = cc.director.getScene();\n    }\n  }\n});\n","import { XNet, XNetEvent } from \"./Network\";\n\n//import { TipsManager } from \"./TipsManager\";\n//const TipsManager = require(\"./TipsManager\");\n\n// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    netEvListener: null,\n    netMsgListener: null,\n    Version: cc.EditBox,\n    WsHost: cc.Label,\n    TxLog: cc.Label,\n    NetReady: Boolean,\n    CmdWait: null\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    /*\n    if (event == XOpcodes.XC_NET_CONNECTED) {\n      this.auth();\n      return;\n    }*/\n\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.TxLog.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n  },\n\n  netSocketEvent: function(msg, target) {\n    if (msg.cmd == XNetEvent.CONNECTED) {\n      target.WsHost.string = XNet.ws_host;\n      target.WsHost.node.color = cc.color(0, 255, 0, 100);\n      target.WsHost.node.opacity = 255;\n      target.NetReady = true;\n\n      if (target.CmdWait) {\n        XNet.Send(JSON.stringify(target.CmdWait));\n      }\n    }\n\n    if (\n      msg.cmd == XNetEvent.CONNECT_TIMEOUT ||\n      msg.cmd == XNetEvent.CONNECT_ERROR\n    ) {\n      target.TxLog.string = \"网络连接错误\";\n    }\n\n    if (msg.cmd == XNetEvent.CONNECT) {\n      target.TxLog.string = \"连接->\" + XNet.ws_host;\n      cc.director\n        .getScheduler()\n        .schedule(target.ConnectCheck, target, 6, 1, 6, false);\n    }\n  },\n\n  ConnectCheck: function() {\n    XNet.ConnectCheck(false);\n  },\n\n  netMsgProc: function(msg, target) {},\n\n  onLoad() {\n    this.netEvListener = { callback: this.netSocketEvent, target: this };\n    this.netMsgListener = { callback: this.netMsgProc, target: this };\n\n    XNet.EarAdd(this);\n    XNet.ListenerAdd(XNetEvent.CONNECTED, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_ERROR, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_TIMEOUT, this.netEvListener);\n\n    //XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    //XNet.Open();\n  },\n\n  start() {},\n\n  ClickBuild() {\n    this.CmdWait = {\n      cmd: \"GX_APP_BUILD\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n\n    XNet.Close();\n    XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    XNet.Open();\n\n    //let ver = this.Version.string;\n    //console.log(\"build...\" + JSON.stringify(scmd));\n    //XNet.Send(JSON.stringify(scmd));\n  },\n\n  ClickTestUpgrade() {\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n  },\n\n  ClickAuditInstall() {\n    XNet.Close();\n    XNet.Host(\"ws://app.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n  },\n\n  ClickGameSwitchPort() {\n    //console.log(\"ClickGameSwitchPort\");\n    //TipsManager.CreateTips(\"现不支持\");\n  },\n\n  ClickAuditPass() {}\n\n  // update (dt) {},\n});\n"],"sourceRoot":"/source/","file":"project.js"}