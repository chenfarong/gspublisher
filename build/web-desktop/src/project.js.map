{"version":3,"sources":["assets/Script/Config.js","assets/Script/Game.js","assets/Script/Gm.js","assets/Script/HelloWorld.js","assets/Script/Login.js","assets/Script/Network.js","assets/prefab/item/ScriptGmCmd.js","assets/Script/TipsCtrl.js","assets/Script/TipsManager.js","assets/Script/main.js"],"names":["module","exports","properties","LoadFromFile","fname","callback","arg","cc","loader","loadRes","err","jsonAsset","this","Data","json","_onAfterLoaded","bind","Array","isArray","FeildName","Loaded","RowObject","index","length","res","Object","o","i","toString","FindObject","result","kname","kvalue","n","arguments","undefined","j","Count","push","FindObjectIndexOf","indexOf","FeildIndex","RowFeildValueFirst","idx","r","Current","RowFeildValue","Select","RowFeildValueFirstEx","ksecond","jx","XGame","username","password","_Network","require","_Game","AConfig","Class","extends","Component","Info","Label","WsHost","EditBox","CmdSend","CmdResult","Recv","LastCmdName","RecvCount","LabRecvCount","GmJson","default","type","JsonAsset","ScrollItem","Prefab","ScrollCmd","ScrollView","netEvent","event","msg","cmdline","JSON","stringify","TxLog","string","text","console","log","cmd","_onGmCmdClick","tar","note","GmInsert","title","item","instantiate","sc","getComponent","SetData","content","addChild","onLoad","XNet","EarAdd","_onAfterGmJsonDBLoaded","_onAfterGmConfig","v","NAME","CMDLINE","NOTE","start","ClickConnect","Close","Host","Open","ClickDisconnect","ClickWsLibrary","ClickCmdSend","parse","Send","e","message","ClickScrollItem","label","labXhr","NetReady","appVer","netEvListener","netMsgListener","CmdWait","tipsPrefab","netSocketEvent","target","XNetEvent","CONNECTED","CONNECT_TIMEOUT","CONNECT_ERROR","CONNECT","ws_host","director","getScheduler","schedule","ConnectCheck","_onAfterGetXMLHttpRequest","xhr","responseText","UpdateGamePort","_xhrXHR","getScene","getChildByName","xlab","getXMLHttpRequest","onreadystatechange","readyState","status","anim","Animation","play","_xlab","open","timeout","send","UpdateGamePort1","setRequestHeader","response","netMsgProc","ListenerAdd","update","dt","clickGameSwitch","createTips","tipsCtrl","setContent","parent","ClickAppBuild","ver","app","ClickAppUpgradeTest","ClickAppUpgradeAudit","ClickGamePortWhere","Username","Password","ClickStart","loadScene","WebSocket","window","MozWebSocket","CLOSE","statics","_socket","_netPros","Map","_netEars","_connectTimeout","_wsReConnectTimes","_reConnectFlag","_reConnectMax","dispatchXNet","forEach","array","listeners","slice","uri","OPEN","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_onMessage","rc","error","data","listenerList","ListenerRemove","splice","ear","EarRemove","pos","flagReconn","CONNECTING","CLOSED","Name","Target","Callback","Cmdline","Note","Click","ShowText","onDestroySelf","node","destroy","AutoRemove","removeChild","tispPrefab","init","Version","Boolean","color","opacity","ClickBuild","ClickTestUpgrade","ClickAuditInstall","ClickGameSwitchPort","ClickAuditPass"],"mappings":"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","sourcesContent":["module.exports = {\n  /*  \n    FeildName = new Array(),\n    ConfigName = \"\",\n    Loaded = false,\n    Data = new Array(),\n*/\n  properties: {\n    //Rows: new Map()\n  },\n\n  LoadFromFile(fname, callback, arg) {\n    cc.loader.loadRes(\n      fname,\n      function(err, jsonAsset) {\n        this.Data = jsonAsset.json;\n        //console.log(JSON.stringify(jsonAsset.json));\n        this._onAfterLoaded();\n        if (callback) callback(arg);\n      }.bind(this)\n    );\n  },\n\n  _onAfterLoaded() {\n    //处理第一行\n    if (Array.isArray(this.Data)) {\n      this.FeildName = this.Data[0];\n      this.Loaded = true;\n    }\n  },\n\n  RowObject(index) {\n    index = index + 1;\n    if (index >= this.Data.length) return null;\n    var res = new Object();\n    let o = this.Data[index];\n    for (let i = 0; i < this.FeildName.length; i++) {\n      res[this.FeildName[i].toString()] = o[i];\n    }\n    return res;\n  },\n\n  //符合条件进入到数组中去\n  FindObject(result, kname, kvalue, n = 1) {\n    let j = 0;\n    for (let i = 0; i < this.Count(); i++) {\n      var o = RowObject(i);\n      if (o[kname] == kvalue) {\n        result.push(o);\n        j++;\n      }\n      if (n > 0 && j >= n) break;\n    }\n  },\n\n  //字段中包含的列出来\n  FindObjectIndexOf(result, kname, kvalue, n = 1) {\n    let j = 0;\n    for (let i = 0; i < this.Count(); i++) {\n      var o = RowObject(i);\n      if (o[kname].indexOf(kvalue) != -1) {\n        result.push(o);\n        j++;\n      }\n      if (n > 0 && j >= n) break;\n    }\n  },\n\n  Count() {\n    if (this.Data.length == 0) return 0;\n    return this.Data.length - 1;\n  },\n\n  FeildIndex(kname) {\n    if (Array.isArray(this.FeildName)) {\n      for (let i = 0; i < this.FeildName.length; i++) {\n        if (this.FeildName[i] == kname) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  },\n\n  ///////////////\n  // 下面用途不大\n  ///////////////\n  RowFeildValueFirst(kname, kvalue) {\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return null;\n    for (let r = 0; r < this.Data.length; r++) {\n      var o = this.Data[r];\n      if (o[idx] == kvalue) {\n        this.Current = o;\n        return o;\n      }\n    }\n    return null;\n  },\n\n  RowFeildValue(kname, kvalue) {\n    this.Select = new Array();\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return res;\n    for (let r = 0; r < this.Data; r++) {\n      var o = this.Data[r];\n      if (o[idx] == kvalue) {\n        this.Select.push(o);\n      }\n    }\n    return this.Select;\n  },\n\n  RowFeildValueFirstEx(kname, kvalue, ksecond) {\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return \"\";\n    for (let r = 0; r < this.Data.length; r++) {\n      let o = this.Data[r];\n      if (o[idx] == kvalue) {\n        let jx = this.FeildIndex(ksecond);\n        if (jx < 0) return \"\";\n        return o[jx];\n      }\n    }\n    return \"\";\n  }\n};\n\n//var XConfig = new AConfig();\n//export { AConfig };\n","var XGame = {\n  username: \"\",\n  password: \"\"\n};\n\nexport { XGame };\n","import { XNet, XNetEvent } from \"./Network\";\nimport { XGame } from \"./Game\";\n\n//import \"./Config\";\nvar AConfig = require(\"Config\");\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Info: cc.Label,\n    WsHost: cc.EditBox,\n    CmdSend: cc.EditBox,\n    CmdResult: cc.EditBox,\n    Recv: cc.EditBox,\n    LastCmdName: \"\", //最后发出的命令名\n    RecvCount: 0,\n    LabRecvCount: cc.Label,\n    GmJson: { default: null, type: cc.JsonAsset },\n    ScrollItem: cc.Prefab,\n    ScrollCmd: cc.ScrollView\n    //GmConfig: new AConfig()\n  },\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    /*\n    if (event == XOpcodes.XC_NET_CONNECTED) {\n      this.auth();\n      return;\n    }*/\n    let cmdline = JSON.stringify(msg);\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.TxLog.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n    if (msg.cmd === this.LastCmdName + \"_R\") {\n      this.CmdResult.string = cmdline;\n    }\n\n    this.Recv.string = cmdline;\n    this.RecvCount++;\n    this.LabRecvCount.string = \"接收数据:\" + this.RecvCount.toString();\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  _onGmCmdClick(tar, cmdline, note) {\n    console.log(\"_onGmCmdClick:\" + cmdline);\n    tar.CmdSend.string = cmdline;\n    tar.CmdResult.string = note;\n  },\n\n  GmInsert(title, cmdline, note) {\n    var item = cc.instantiate(this.ScrollItem);\n    //这里是脚本组件的名字\n    //item.getComponent(\"RankItem\").init(i, playerInfo);\n    let sc = item.getComponent(\"ScriptGmCmd\");\n    if (sc) {\n      sc.SetData(this._onGmCmdClick, this, title, cmdline, note); //.bind(this);\n    }\n    this.ScrollCmd.content.addChild(item);\n  },\n\n  onLoad() {\n    this.Info.string = \"ud=\" + XGame.username + \":\" + XGame.password;\n\n    XNet.EarAdd(this);\n\n    /*    \n    for (var i = 0; i < 20; i++) {\n      var item = cc.instantiate(this.ScrollItem);\n      //这里是脚本组件的名字\n      //item.getComponent(\"RankItem\").init(i, playerInfo);\n      let sc = item.getComponent(\"ScriptGmCmd\");\n      if (sc) {\n        sc.SetData(this._onGmCmdClick, this, \"echo\" + i, \"echo\" + i, \"echo\"); //.bind(this);\n      }\n      this.ScrollCmd.content.addChild(item);\n      console.log(\"++:\" + i.toString());\n    }\n*/\n\n    cc.loader.loadRes(\n      \"db/gm_cmd\",\n      function(err, jsonAsset) {\n        this.GmJson = jsonAsset;\n        //console.log(JSON.stringify(jsonAsset.json));\n        this._onAfterGmJsonDBLoaded();\n      }.bind(this)\n    );\n\n    //this.GmConfig.LoadFromFile(\"db/gm_cmd\", this._onAfterGmConfig, this);\n    AConfig.LoadFromFile(\"db/gm_cmd\", this._onAfterGmConfig, this);\n  },\n\n  _onAfterGmConfig(arg) {\n    let v = AConfig.RowFeildValueFirstEx(\"ID\", \"10001\", \"NAME\");\n    console.log(\"++++++++++++++\" + v);\n    for (let i = 0; i < AConfig.Count(); i++) {\n      let o = AConfig.RowObject(i);\n      if (o) {\n        arg.GmInsert(o.NAME, o.CMDLINE, o.NOTE);\n      }\n    }\n  },\n\n  start() {},\n\n  _onAfterGmJsonDBLoaded() {\n    if (this.GmJson) {\n      //console.log(JSON.stringify(this.GmJson.json));\n      if (Array.isArray(this.GmJson.json)) {\n        //this.GmJson.json.forEach(function(item, index, array)\n        for (let i = 0; i < this.GmJson.json.length; i++) {\n          //console.log(item, index);\n          let j = this.GmJson.json[i];\n          console.log(JSON.stringify(j));\n        }\n      }\n    }\n  },\n\n  // update (dt) {},\n\n  ClickConnect() {\n    if (this.WsHost.string.length < 1) {\n      return;\n    }\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:8086/xx\");\n    XNet.Open();\n    /*\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n    */\n  },\n  ClickDisconnect() {\n    XNet.Close();\n  },\n  //服务器连接库\n  ClickWsLibrary() {},\n\n  //发出命令\n  ClickCmdSend() {\n    let cmdline = this.CmdSend.string;\n    console.log(\"cmdline:\" + cmdline);\n    try {\n      let msg = JSON.parse(cmdline);\n      this.LastCmdName = msg.cmd;\n      XNet.Send(cmdline);\n    } catch (e) {\n      this.CmdResult.string = e.message;\n    }\n  },\n\n  //\n  ClickScrollItem() {\n    //看属于行  json instanceof JSONArray\n  }\n});\n","//const TipsManager = require(\"./TipsManager.js\"); //浏览器会有问题\nimport { XNet, XNetEvent } from \"./Network\";\n//import { TipsManager } from \"./TipsManager\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    label: {\n      default: null,\n      type: cc.Label\n    },\n    labXhr: cc.Label,\n    NetReady: false,\n    appVer: cc.EditBox,\n    netEvListener: null,\n    netMsgListener: null,\n    CmdWait: null,\n    // defaults, set visually when attaching this script to the Canvas\n    text: \"准备就绪\",\n    tipsPrefab: cc.Prefab\n  },\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.label.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n  },\n\n  netSocketEvent: function(msg, target) {\n    if (msg.cmd == XNetEvent.CONNECTED) {\n      //      target.WsHost.string = XNet.ws_host;\n      //      target.WsHost.node.color = cc.color(0, 255, 0, 100);\n      //      target.WsHost.node.opacity = 255;\n      target.NetReady = true;\n\n      if (target.CmdWait) {\n        XNet.Send(JSON.stringify(target.CmdWait));\n      }\n    }\n\n    if (\n      msg.cmd == XNetEvent.CONNECT_TIMEOUT ||\n      msg.cmd == XNetEvent.CONNECT_ERROR\n    ) {\n      target.label.string = \"网络连接错误\";\n    }\n\n    if (msg.cmd == XNetEvent.CONNECT) {\n      target.label.string = \"连接->\" + XNet.ws_host;\n      cc.director\n        .getScheduler()\n        .schedule(target.ConnectCheck, target, 6, 1, 6, false);\n    }\n  },\n\n  ConnectCheck: function() {\n    XNet.ConnectCheck(false);\n  },\n\n  _onAfterGetXMLHttpRequest: function(xhr) {\n    if (this.label) {\n      this.label.string = \"recv:\" + xhr.responseText;\n    }\n  },\n\n  UpdateGamePort: function() {\n    this._xhrXHR = null;\n    /*\n    cc.loader.load(\n      {\n        url: \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\",\n        type: \"json\"\n      },\n      function(err, text) {\n        console.log(\n          \"Should load a texture from RESTful API by specify the type: \",\n          text\n        );\n      }\n    );\n    */\n\n    let cav = cc.director.getScene().getChildByName(\"Canvas\");\n    let label = cav.getChildByName(\"LabelGamePort\");\n    if (label) {\n      let xlab = label.getComponent(cc.Label);\n      if (xlab) {\n        xlab.string = \"\";\n      }\n    }\n\n    var xhr = cc.loader.getXMLHttpRequest();\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status <= 207)) {\n        console.log(\"recv:\" + xhr.responseText);\n\n        if (label) {\n          let anim = label.getComponent(cc.Animation);\n          if (anim) {\n            anim.play(\"labGamePort\");\n          }\n          //label.node.color = cc.color(0, 255, 0, 255);\n          //label.node.visible = false;\n          let xlab = label.getComponent(cc.Label);\n          if (xlab) {\n            xlab.string = xhr.responseText;\n            console.log(\"========\" + label.string);\n          }\n        }\n        //this._onAfterGetXMLHttpRequest(xhr);\n      }\n    };\n    xhr.open(\"GET\", \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\");\n    xhr.timeout = 5000; //5 seconds for timeout\n    xhr.send();\n    this._xhrXHR = xhr;\n  },\n\n  UpdateGamePort1: function() {\n    var xhr = cc.loader.getXMLHttpRequest();\n    //    this.streamXHREventsToLabel(xhr, this.xhr, this.xhr, \"GET\");\n    //    var xhr = cc.loader.getXMLHttpRequest();\n\n    //xhr.open(\"GET\", url);\n    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status <= 207)) {\n        var response = xhr.responseText;\n        console.log(\"recv:\" + xhr.responseText);\n        //this.xhr.string = xhr.responseText;\n        //json 解析\n        var jsonData = JSON.parse(response);\n        var code = jsonData[\"code\"];\n        if (code == 1) {\n          //                self.successSprite.getComponent(cc.Animation).play('resAnimate');\n        }\n      }\n    };\n\n    xhr.open(\"GET\", \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\");\n    //set Content-type \"text/plain\" to post ArrayBuffer or ArrayBufferView\n    //xhr.setRequestHeader(\"Content-Type\",\"Application/json\");\n    // Uint8Array is an ArrayBufferView\n    xhr.timeout = 5000; //5 seconds for timeout\n    xhr.send();\n  },\n\n  // use this for initialization\n  onLoad: function() {\n    this.label.string = this.text;\n\n    this.netEvListener = { callback: this.netSocketEvent, target: this };\n    this.netMsgListener = { callback: this.netMsgProc, target: this };\n\n    XNet.EarAdd(this);\n    XNet.ListenerAdd(XNetEvent.CONNECTED, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_ERROR, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_TIMEOUT, this.netEvListener);\n\n    this.UpdateGamePort();\n  },\n\n  start() {\n    //TipsManager.init();\n  },\n\n  // called every frame\n  update: function(dt) {},\n\n  clickGameSwitch() {\n    //TipsManager.createTips(\"还没实现\");\n    this.createTips(\"还没实现\");\n  },\n\n  createTips(content) {\n    var n = cc.instantiate(this.tipsPrefab);\n    if (n) {\n      let tipsCtrl = n.getComponent(\"TipsCtrl\");\n      if (content && tipsCtrl) {\n        tipsCtrl.setContent(content);\n      }\n      n.parent = cc.director.getScene();\n    }\n  },\n\n  ClickAppBuild() {\n    //let ver =  appVer.string;\n    this.CmdWait = {\n      cmd: \"GX_APP_BUILD\",\n      ver: this.appVer.string,\n      app: \"XX\"\n    };\n\n    XNet.Close();\n    XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    XNet.Open();\n\n    this.label.string = \"build:\" + this.appVer.string;\n  },\n\n  ClickAppUpgradeTest() {\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.appVer.string,\n      app: \"XX\"\n    };\n    this.label.string = \"test-upgrade:\" + this.appVer.string;\n  },\n\n  ClickAppUpgradeAudit() {\n    //TipsManager.createTips(\"还没实现\");\n    this.createTips(\"还没实现\");\n  },\n  ClickGamePortWhere() {\n    this.UpdateGamePort();\n  }\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nimport { XGame } from \"./Game\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Username: cc.EditBox,\n    Password: cc.EditBox\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n\n  start() {},\n\n  ClickStart() {\n    XGame.username = this.Username.string;\n    XGame.password = this.Password.string;\n    cc.director.loadScene(\"gm\");\n  }\n\n  // update (dt) {},\n});\n","var WebSocket = WebSocket || window.WebSocket || window.MozWebSocket;\n\n//import { XOpcodes } from \"./Opcodes\";\n\nvar XNetEvent = {\n  CONNECT: \"XC_NET_CONNECT\",\n  CONNECT_ERROR: \"XC_NET_CONNECT_ERROR\",\n  CONNECT_TIMEOUT: \"XC_NET_CONNECT_TIMEOUT\",\n  CONNECTED: \"XC_NET_CONNECTED\",\n  CLOSE: \"XC_NET_CLOSE\"\n};\n\n//个人采用文本方式来收发数据\n//频率高的采用二进制数据进行收发 例如 移动数据包\n\nvar XNet = cc.Class({\n  extends: cc.Component,\n  statics: {\n    _socket: {},\n    ws_host: \"ws://test.9966886699.com:8086/game\",\n    _netPros: new Map(),\n    _netEars: new Array(),\n    _connectTimeout: 5,\n    _wsReConnectTimes: 0,\n    _reConnectFlag: false,\n    _reConnectMax: 3,\n\n    dispatchXNet(event, msg) {\n      //        XGame.DoXEvent(event,msg);\n\n      this._netEars.forEach(function(item, index, array) {\n        item.netEvent(event, msg);\n      });\n\n      if (this._netPros[event]) {\n        var listeners = this._netPros[event].slice();\n        for (var i = 0; i < listeners.length; i++) {\n          listeners[i].callback(msg, listeners[i].target);\n        }\n      }\n    },\n\n    Host: function(uri) {\n      this.ws_host = uri;\n    },\n\n    Open: function() {\n      if (this._socket == null || this._socket.readyState != WebSocket.OPEN) {\n        console.log(\"connect \" + this.ws_host);\n        //            if(this._socket!=null) delete this._socket;\n\n        this._socket = new WebSocket(this.ws_host);\n        this._socket.onopen = this._onOpen.bind(this);\n        this._socket.onerror = this._onError.bind(this);\n        this._socket.onclose = this._onClose.bind(this);\n        this._socket.onmessage = this._onMessage.bind(this);\n\n        //cc.director.getScheduler().schedule(this.connectTimeoutCheck,this,1, 5, 3,false);\n        this.dispatchXNet(XNetEvent.CONNECT, {\n          cmd: XNetEvent.CONNECT,\n          rc: 0\n        });\n      }\n      return this;\n    },\n\n    Close() {\n      if (this._socket && this._socket.readyState == 1) {\n        delete this._socket;\n        //        this._socket = nil;//这个不需要\n        //cc.director.getScheduler().\n      }\n    },\n\n    readyState() {\n      if (this._socket) return this._socket.readyState;\n      return -1;\n    },\n\n    _onOpen: function(event) {\n      console.log(\"connected \" + this.ws_host);\n      //utils.OutObj(evt);\n      //var event = new cc.Event(this,\"Network\",true);\n      //event.setUserData(\"{...}\");\n      //cc.eventTarget.dispatchEvent(event);\n      // cc.EventTarget.dispatchEvent(\"adas\",\"123\",evt);\n\n      //\n      //cc.eventManager.dispatchCustomEvent(\"XNetOpened\", {a:1,b:2});\n\n      //var event=new cc.EventCustom(\"XNetOpened\");\n      //cc.SystemEvent.dispatchCustomEvent(event);\n      this.dispatchXNet(XNetEvent.CONNECTED, {\n        cmd: XNetEvent.CONNECTED,\n        rc: 0\n      });\n    },\n\n    _onError: function(event) {\n      XNet.dispatchXNet(XNetEvent.CONNECT_ERROR, {\n        cmd: XNetEvent.CONNECT_ERROR,\n        rc: event\n      });\n      console.error(\"WebSocket error observed:\", event);\n    },\n\n    _onClose: function(event) {\n      console.log(\"WebSocket is closed now.\");\n      XNet.dispatchXNet(XNetEvent.CLOSE, {\n        cmd: XNetEvent.CLOSE,\n        rc: 0\n      });\n    },\n\n    _onMessage: function(event) {\n      console.log(\"WebSocket message received:\" + event.data);\n      let msg = JSON.parse(event.data);\n      //console.log(msg.cmd);\n      XNet.dispatchXNet(msg.cmd, msg);\n    },\n\n    ListenerAdd(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (!listenerList) listenerList = this._netPros[event] = new Array();\n      for (var i = 0; i < listenerList.length; i++) {\n        if (listenerList[i] == callback) return;\n      }\n      listenerList.push(callback);\n    },\n\n    ListenerRemove(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (listenerList) {\n        for (var i = 0; i < listenerList.length; i++) {\n          if (listenerList[i] == callback) {\n            listenerList.splice(i, 1);\n            return;\n          }\n        }\n      }\n    },\n\n    EarAdd(ear) {\n      this._netEars.push(ear);\n    },\n\n    EarRemove(ear) {\n      let pos = this._netEars.indexOf(ear);\n      this._netEars.splice(pos, 1);\n    },\n\n    ConnectCheck: function(flagReconn) {\n      if (this._socket == null) return;\n\n      if (this._socket.readyState == WebSocket.CONNECTING) {\n        console.log(\"websocket connect timeout\");\n        XNet.dispatchXNet(XNetEvent.CONNECT_TIMEOUT, {\n          cmd: XNetEvent.CONNECT_TIMEOUT,\n          rc: 0\n        });\n        if (flagReconn) this.Open();\n      }\n\n      if (this._socket.readyState == WebSocket.CLOSED) {\n        console.log(\"websocket reconnect\");\n        //this.connect();\n      }\n    },\n\n    Send: function(text) {\n      if (!this._socket) return;\n      if (this._socket.readyState == WebSocket.OPEN) {\n        this._socket.send(text);\n      }\n    }\n  }\n});\n\nexport { XNet, XNetEvent };\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Name: cc.Label\n    //    Cmdline: \"\",\n    //    Note: \"\"\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  SetData(callback, target, title, cmdline, note) {\n    this.Target = target;\n    this.Callback = callback;\n    this.Name.string = title;\n    this.Cmdline = cmdline;\n    this.Note = note;\n  },\n\n  // onLoad () {},\n  Click() {\n    if (this.Callback) {\n      this.Callback(this.Target, this.Cmdline, this.Note);\n    }\n  },\n\n  start() {}\n\n  // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    ShowText: cc.Label\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n  onDestroySelf() {\n    this.node.destroy();\n  },\n\n  start() {},\n\n  setContent(text) {\n    if (text) this.ShowText.string = text;\n    //this.getScheduler().schedule(this.AutoRemove, this, 1, 1, 3, false);\n    //this.runAction()\n    //cc.director.getScheduler().schedule(this.AutoRemove, this, 1, 1, 3, false);\n  },\n\n  AutoRemove() {\n    this.node.parent.removeChild(this.node);\n  }\n\n  // update (dt) {},\n});\n","cc.Class({\n  extends: cc.Component,\n  properties: {\n    tispPrefab: cc.Prefab\n  },\n\n  init() {\n    if (this.tipsPrefab) return;\n\n    // cc.loader.loadRes(\"tips/Tips\", (err, prefab) => {\n    //   this.tipsPrefab = prefab;\n    // });\n    console.log(\"tips prefab ok\");\n  },\n\n  createTips(content) {\n    var n = cc.instantiate(this.tipsPrefab);\n    if (n) {\n      let tipsCtrl = n.getComponent(\"TipsCtrl\");\n      if (content && tipsCtrl) {\n        tipsCtrl.setContent(content);\n      }\n      n.parent = cc.director.getScene();\n    }\n  }\n});\n","import { XNet, XNetEvent } from \"./Network\";\n\n//import { TipsManager } from \"./TipsManager\";\n//const TipsManager = require(\"./TipsManager\");\n\n// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    netEvListener: null,\n    netMsgListener: null,\n    Version: cc.EditBox,\n    WsHost: cc.Label,\n    TxLog: cc.Label,\n    NetReady: Boolean,\n    CmdWait: null\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    /*\n    if (event == XOpcodes.XC_NET_CONNECTED) {\n      this.auth();\n      return;\n    }*/\n\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.TxLog.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n  },\n\n  netSocketEvent: function(msg, target) {\n    if (msg.cmd == XNetEvent.CONNECTED) {\n      target.WsHost.string = XNet.ws_host;\n      target.WsHost.node.color = cc.color(0, 255, 0, 100);\n      target.WsHost.node.opacity = 255;\n      target.NetReady = true;\n\n      if (target.CmdWait) {\n        XNet.Send(JSON.stringify(target.CmdWait));\n      }\n    }\n\n    if (\n      msg.cmd == XNetEvent.CONNECT_TIMEOUT ||\n      msg.cmd == XNetEvent.CONNECT_ERROR\n    ) {\n      target.TxLog.string = \"网络连接错误\";\n    }\n\n    if (msg.cmd == XNetEvent.CONNECT) {\n      target.TxLog.string = \"连接->\" + XNet.ws_host;\n      cc.director\n        .getScheduler()\n        .schedule(target.ConnectCheck, target, 6, 1, 6, false);\n    }\n  },\n\n  ConnectCheck: function() {\n    XNet.ConnectCheck(false);\n  },\n\n  netMsgProc: function(msg, target) {},\n\n  onLoad() {\n    this.netEvListener = { callback: this.netSocketEvent, target: this };\n    this.netMsgListener = { callback: this.netMsgProc, target: this };\n\n    XNet.EarAdd(this);\n    XNet.ListenerAdd(XNetEvent.CONNECTED, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_ERROR, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_TIMEOUT, this.netEvListener);\n\n    //XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    //XNet.Open();\n  },\n\n  start() {},\n\n  ClickBuild() {\n    this.CmdWait = {\n      cmd: \"GX_APP_BUILD\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n\n    XNet.Close();\n    XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    XNet.Open();\n\n    //let ver = this.Version.string;\n    //console.log(\"build...\" + JSON.stringify(scmd));\n    //XNet.Send(JSON.stringify(scmd));\n  },\n\n  ClickTestUpgrade() {\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n  },\n\n  ClickAuditInstall() {\n    XNet.Close();\n    XNet.Host(\"ws://app.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n  },\n\n  ClickGameSwitchPort() {\n    //console.log(\"ClickGameSwitchPort\");\n    //TipsManager.CreateTips(\"现不支持\");\n  },\n\n  ClickAuditPass() {}\n\n  // update (dt) {},\n});\n"],"sourceRoot":"/source/","file":"project.js"}