{"version":3,"sources":["assets/Script/Config.js","assets/resources/GMain.js","assets/resources/Game.js","assets/Script/Gm.js","assets/Script/Home.js","assets/resources/Loading.js","assets/Script/Login.js","assets/Script/Network.js","assets/Script/NewScript.js","assets/prefab/item/ScriptGmCmd.js","assets/Script/TipsCtrl.js","assets/Script/TipsManager.js","assets/Script/main.js"],"names":["module","exports","properties","LoadFromFile","fname","callback","arg","cc","loader","loadRes","err","jsonAsset","this","Data","json","_onAfterLoaded","bind","Array","isArray","FeildName","Loaded","RowObject","index","length","res","Object","o","i","toString","FindObject","result","kname","kvalue","n","arguments","undefined","j","Count","push","FindObjectIndexOf","indexOf","FeildIndex","RowFeildValueFirst","idx","r","Current","RowFeildValue","Select","RowFeildValueFirstEx","ksecond","jx","_Network","require","Class","extends","Component","TryTick","Loading","Prefab","createLoading","instantiate","sz","director","getWinSize","setPosition","width","height","parent","getScene","name","onLoad","start","cbWhere","who","response","XGame","Where","XNet","dispatchXNet","WhereAfter","v","find","showText","getComponent","Label","string","cbUpgrade","statics","clientVersion","resVersion","username","password","accid","aid","token","whereResult","sdtime","whereUrl","url","req","cmd","ver","realm","xhr","getXMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","open","timeout","ontimeout","console","error","send","stringify","Version","log","server","aver","Update","dt","AConfig","Info","WsHost","EditBox","CmdSend","CmdResult","Recv","LastCmdName","RecvCount","LabRecvCount","GmJson","default","type","JsonAsset","ScrollItem","ScrollCmd","ScrollView","netEvent","event","msg","cmdline","TxLog","text","_onGmCmdClick","tar","note","GmInsert","title","item","sc","SetData","content","addChild","EarAdd","_onAfterGmJsonDBLoaded","_onAfterGmConfig","NAME","CMDLINE","NOTE","ClickConnect","Host","Open","ClickDisconnect","Close","ClickWsLibrary","ClickCmdSend","Send","e","message","ClickScrollItem","label","labXhr","NetReady","appVer","netEvListener","netMsgListener","CmdWait","tipsPrefab","ShowStory","netSocketEvent","target","XNetEvent","CONNECTED","CONNECT_TIMEOUT","CONNECT_ERROR","CONNECT","ws_host","getScheduler","schedule","ConnectCheck","_onAfterGetXMLHttpRequest","UpdateGamePort","_xhrXHR","getChildByName","xlab","anim","Animation","play","_xlab","UpdateGamePort1","setRequestHeader","netMsgProc","ListenerAdd","update","clickGameSwitch","createTips","tipsCtrl","setContent","ClickAppBuild","app","ClickAppUpgradeTest","ClickAppUpgradeAudit","ClickGamePortWhere","ShowText","SetShowText","Username","Password","ClickStart","loadScene","WebSocket","window","MozWebSocket","CLOSE","_socket","_netPros","Map","_netEars","_connectTimeout","_wsReConnectTimes","_reConnectFlag","_reConnectMax","forEach","array","listeners","slice","uri","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_onMessage","rc","close","data","listenerList","ListenerRemove","splice","ear","EarRemove","pos","flagReconn","CONNECTING","CLOSED","OPEN","Name","Target","Callback","Cmdline","Note","Click","onDestroySelf","node","destroy","onEnable","AutoRemove","removeChild","tispPrefab","init","Boolean","color","opacity","ClickBuild","ClickTestUpgrade","ClickAuditInstall","ClickGameSwitchPort","ClickAuditPass"],"mappings":"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","sourcesContent":["module.exports = {\n  /*  \n    FeildName = new Array(),\n    ConfigName = \"\",\n    Loaded = false,\n    Data = new Array(),\n*/\n  properties: {\n    //Rows: new Map()\n  },\n\n  LoadFromFile(fname, callback, arg) {\n    cc.loader.loadRes(\n      fname,\n      function(err, jsonAsset) {\n        this.Data = jsonAsset.json;\n        //console.log(JSON.stringify(jsonAsset.json));\n        this._onAfterLoaded();\n        if (callback) callback(arg);\n      }.bind(this)\n    );\n  },\n\n  _onAfterLoaded() {\n    //处理第一行\n    if (Array.isArray(this.Data)) {\n      this.FeildName = this.Data[0];\n      this.Loaded = true;\n    }\n  },\n\n  RowObject(index) {\n    index = index + 1;\n    if (index >= this.Data.length) return null;\n    var res = new Object();\n    let o = this.Data[index];\n    for (let i = 0; i < this.FeildName.length; i++) {\n      res[this.FeildName[i].toString()] = o[i];\n    }\n    return res;\n  },\n\n  //符合条件进入到数组中去\n  FindObject(result, kname, kvalue, n = 1) {\n    let j = 0;\n    for (let i = 0; i < this.Count(); i++) {\n      var o = RowObject(i);\n      if (o[kname] == kvalue) {\n        result.push(o);\n        j++;\n      }\n      if (n > 0 && j >= n) break;\n    }\n  },\n\n  //字段中包含的列出来\n  FindObjectIndexOf(result, kname, kvalue, n = 1) {\n    let j = 0;\n    for (let i = 0; i < this.Count(); i++) {\n      var o = RowObject(i);\n      if (o[kname].indexOf(kvalue) != -1) {\n        result.push(o);\n        j++;\n      }\n      if (n > 0 && j >= n) break;\n    }\n  },\n\n  Count() {\n    if (this.Data.length == 0) return 0;\n    return this.Data.length - 1;\n  },\n\n  FeildIndex(kname) {\n    if (Array.isArray(this.FeildName)) {\n      for (let i = 0; i < this.FeildName.length; i++) {\n        if (this.FeildName[i] == kname) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  },\n\n  ///////////////\n  // 下面用途不大\n  ///////////////\n  RowFeildValueFirst(kname, kvalue) {\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return null;\n    for (let r = 0; r < this.Data.length; r++) {\n      var o = this.Data[r];\n      if (o[idx] == kvalue) {\n        this.Current = o;\n        return o;\n      }\n    }\n    return null;\n  },\n\n  RowFeildValue(kname, kvalue) {\n    this.Select = new Array();\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return res;\n    for (let r = 0; r < this.Data; r++) {\n      var o = this.Data[r];\n      if (o[idx] == kvalue) {\n        this.Select.push(o);\n      }\n    }\n    return this.Select;\n  },\n\n  RowFeildValueFirstEx(kname, kvalue, ksecond) {\n    let idx = this.FeildIndex(kname);\n    if (idx < 0) return \"\";\n    for (let r = 0; r < this.Data.length; r++) {\n      let o = this.Data[r];\n      if (o[idx] == kvalue) {\n        let jx = this.FeildIndex(ksecond);\n        if (jx < 0) return \"\";\n        return o[jx];\n      }\n    }\n    return \"\";\n  }\n};\n\n//var XConfig = new AConfig();\n//export { AConfig };\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nimport { XNet } from \"./Network\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    TryTick: 0,\n    Loading: cc.Prefab\n    // foo: {\n    //     // ATTRIBUTES:\n    //     default: null,        // The default value will be used only when the component attaching\n    //                           // to a node for the first time\n    //     type: cc.SpriteFrame, // optional, default is typeof default\n    //     serializable: true,   // optional, default is true\n    // },\n    // bar: {\n    //     get () {\n    //         return this._bar;\n    //     },\n    //     set (value) {\n    //         this._bar = value;\n    //     }\n    // },\n  },\n\n  createLoading() {\n    var n = cc.instantiate(this.Loading);\n    if (n) {\n      // let tipsCtrl = n.getComponent(\"TipsCtrl\");\n      // if (content && tipsCtrl) {\n      //   tipsCtrl.setContent(content);\n      // }\n      let sz = cc.director.getWinSize();\n      n.setPosition(sz.width / 2, sz.height / 2, 0);\n      n.parent = cc.director.getScene();\n      n.name = \"loading\";\n    }\n  },\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    this.createLoading();\n    //var loading = cc.instantiate(Loading);\n    //cc.director.getScene().addChild(loading);\n  },\n\n  start() {\n    this.TryTick = 1;\n  },\n\n  cbWhere: function(who, response) {\n    //    console.log(response);\n    //    console.log(typeof who);\n    who.TryTick++;\n    //    console.log(who.TryTick);\n    if (response == null) {\n      XGame.Where(who.cbWhere, who.TryTick);\n    } else {\n      //进行热更新判断\n      XNet.dispatchXNet(\"GX_WHERE_R\", response);\n\n      who.WhereAfter();\n    }\n  },\n\n  WhereAfter: function() {\n    let v = cc.find(\"loading/ShowText\", cc.director.getScene());\n    if (v != null) {\n      let showText = v.getComponent(cc.Label);\n      if (showText != null) {\n        showText.string = \"成功获取游戏服务器位置\";\n      }\n    }\n    //console.log(\"222\", JSON.stringify(XGame.whereResult));\n  },\n\n  //\n  cbUpgrade: function(who, response) {\n    //如果返回要求升级JS代码部分\n  }\n\n  // update (dt) {},\n});\n","//import { XNet } from \"./Network\";\n\nvar XGame = cc.Class({\n  extends: cc.Component,\n  statics: {\n    clientVersion: 10000, //客户端程序版本号\n    resVersion: 10000, //资源版本号\n    username: \"\",\n    password: \"\",\n    accid: \"\", //账号\n    aid: \"\", //角色编号\n    token: \"\", //令牌\n    whereResult: {}, //游戏服务位置\n    sdtime: 0, //和服务器之间的时间差 毫秒\n\n    whereUrl: [\n      \"http://where.9966886699.com/xx/\",\n      \"http://where.9966886699.com/xx/\",\n      \"http://where.9966886699.com/xx/\"\n    ],\n\n    //向服务获取游戏服务器位置\n    Where: function(callback, who, n) {\n      n = n % 3;\n      let url = \"http://where.9966886699.com/xx/\";\n      url = this.whereUrl[n];\n\n      //从位置中心查询游戏服务器位置 http post 获得\n      let req = {};\n      req.cmd = \"GX_WHERE\";\n      req.ver = \"1000\";\n      req.realm = \"android\";\n      //XNet.HttpPost(\"http://where.9966886699.com/xx/\", req);\n      var xhr = cc.loader.getXMLHttpRequest();\n      xhr.onreadystatechange = function() {\n        if (xhr.readyState === 4) {\n          //console.log(\"recv:\" + xhr.responseText);\n          if (xhr.status === 200) {\n            //收到内容后处理\n            XGame.whereResult = JSON.parse(xhr.responseText);\n            //console.log(\"====\", JSON.stringify(XGame.whereResult));\n            callback(who, xhr.responseText);\n          } else {\n            callback(who, null);\n          }\n        }\n      };\n      xhr.open(\"POST\", url);\n      xhr.timeout = 5000; //5 seconds for timeout\n      xhr.ontimeout = () => {\n        console.error(\"Timeout!!\");\n        callback(who, null);\n      };\n\n      xhr.send(JSON.stringify(req));\n    },\n\n    //向游戏服务器查询版本号\n    Version: function(callback, who) {\n      console.log(JSON.stringify(XGame.whereResult));\n\n      let url = \"http://where.9966886699.com/xx/\";\n      url = \"http://\" + XGame.whereResult.server[0] + \"/version\";\n      console.log(\"Version\", url);\n\n      //发送请求版本命令\n      let req = {};\n      req.cmd = \"GX_VERSION\";\n      req.aver = 1000;\n      var xhr = cc.loader.getXMLHttpRequest();\n      xhr.onreadystatechange = function() {\n        if (xhr.readyState === 4) {\n          console.log(\"recv:\" + xhr.responseText);\n          if (xhr.status === 200) {\n            //收到内容后处理\n            //XGame.whereResult = JSON.parse(xhr.responseText);\n            //console.log(\"====\", JSON.stringify(XGame.whereResult));\n            callback(who, xhr.responseText);\n          } else {\n            callback(who, null);\n          }\n        }\n      };\n      xhr.open(\"POST\", url);\n      xhr.timeout = 5000; //5 seconds for timeout\n      xhr.ontimeout = () => {\n        console.error(\"Timeout!!\");\n        callback(who, null);\n      };\n\n      xhr.send(JSON.stringify(req));\n    },\n\n    //这里实现逻辑帧\n    //dt 上一帧到本帧时间差\n    Update: function(dt) {}\n  }\n});\n\nexport { XGame };\n","import { XNet, XNetEvent } from \"./Network\";\n\n//import \"./Config\";\nvar AConfig = require(\"Config\");\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Info: cc.Label,\n    WsHost: cc.EditBox,\n    CmdSend: cc.EditBox,\n    CmdResult: cc.EditBox,\n    Recv: cc.EditBox,\n    LastCmdName: \"\", //最后发出的命令名\n    RecvCount: 0,\n    LabRecvCount: cc.Label,\n    GmJson: { default: null, type: cc.JsonAsset },\n    ScrollItem: cc.Prefab,\n    ScrollCmd: cc.ScrollView\n    //GmConfig: new AConfig()\n  },\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    /*\n    if (event == XOpcodes.XC_NET_CONNECTED) {\n      this.auth();\n      return;\n    }*/\n    let cmdline = JSON.stringify(msg);\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.TxLog.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n    if (msg.cmd === this.LastCmdName + \"_R\") {\n      this.CmdResult.string = cmdline;\n    }\n\n    this.Recv.string = cmdline;\n    this.RecvCount++;\n    this.LabRecvCount.string = \"接收数据:\" + this.RecvCount.toString();\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  _onGmCmdClick(tar, cmdline, note) {\n    console.log(\"_onGmCmdClick:\" + cmdline);\n    tar.CmdSend.string = cmdline;\n    tar.CmdResult.string = note;\n  },\n\n  GmInsert(title, cmdline, note) {\n    var item = cc.instantiate(this.ScrollItem);\n    //这里是脚本组件的名字\n    //item.getComponent(\"RankItem\").init(i, playerInfo);\n    let sc = item.getComponent(\"ScriptGmCmd\");\n    if (sc) {\n      sc.SetData(this._onGmCmdClick, this, title, cmdline, note); //.bind(this);\n    }\n    this.ScrollCmd.content.addChild(item);\n  },\n\n  onLoad() {\n    XNet.EarAdd(this);\n\n    /*    \n    for (var i = 0; i < 20; i++) {\n      var item = cc.instantiate(this.ScrollItem);\n      //这里是脚本组件的名字\n      //item.getComponent(\"RankItem\").init(i, playerInfo);\n      let sc = item.getComponent(\"ScriptGmCmd\");\n      if (sc) {\n        sc.SetData(this._onGmCmdClick, this, \"echo\" + i, \"echo\" + i, \"echo\"); //.bind(this);\n      }\n      this.ScrollCmd.content.addChild(item);\n      console.log(\"++:\" + i.toString());\n    }\n*/\n\n    cc.loader.loadRes(\n      \"db/gm_cmd\",\n      function(err, jsonAsset) {\n        this.GmJson = jsonAsset;\n        //console.log(JSON.stringify(jsonAsset.json));\n        this._onAfterGmJsonDBLoaded();\n      }.bind(this)\n    );\n\n    //this.GmConfig.LoadFromFile(\"db/gm_cmd\", this._onAfterGmConfig, this);\n    AConfig.LoadFromFile(\"db/gm_cmd\", this._onAfterGmConfig, this);\n  },\n\n  _onAfterGmConfig(arg) {\n    let v = AConfig.RowFeildValueFirstEx(\"ID\", \"10001\", \"NAME\");\n    console.log(\"++++++++++++++\" + v);\n    for (let i = 0; i < AConfig.Count(); i++) {\n      let o = AConfig.RowObject(i);\n      if (o) {\n        arg.GmInsert(o.NAME, o.CMDLINE, o.NOTE);\n      }\n    }\n  },\n\n  start() {},\n\n  _onAfterGmJsonDBLoaded() {\n    if (this.GmJson) {\n      //console.log(JSON.stringify(this.GmJson.json));\n      if (Array.isArray(this.GmJson.json)) {\n        //this.GmJson.json.forEach(function(item, index, array)\n        for (let i = 0; i < this.GmJson.json.length; i++) {\n          //console.log(item, index);\n          let j = this.GmJson.json[i];\n          console.log(JSON.stringify(j));\n        }\n      }\n    }\n  },\n\n  // update (dt) {},\n\n  ClickConnect() {\n    if (this.WsHost.string.length < 1) {\n      return;\n    }\n    //XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:8086/xx\");\n    XNet.Open();\n    /*\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n    */\n  },\n  ClickDisconnect() {\n    XNet.Close();\n  },\n  //服务器连接库\n  ClickWsLibrary() {},\n\n  //发出命令\n  ClickCmdSend() {\n    let cmdline = this.CmdSend.string;\n    console.log(\"cmdline:\" + cmdline);\n    try {\n      let msg = JSON.parse(cmdline);\n      this.LastCmdName = msg.cmd;\n      XNet.Send(cmdline);\n    } catch (e) {\n      this.CmdResult.string = e.message;\n    }\n  },\n\n  //\n  ClickScrollItem() {\n    //看属于行  json instanceof JSONArray\n  }\n});\n","//const TipsManager = require(\"./TipsManager.js\"); //浏览器会有问题\nimport { XNet, XNetEvent } from \"./Network\";\n//import { TipsManager } from \"./TipsManager\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    label: {\n      default: null,\n      type: cc.Label\n    },\n    labXhr: cc.Label,\n    NetReady: false,\n    appVer: cc.EditBox,\n    netEvListener: null,\n    netMsgListener: null,\n    CmdWait: null,\n    // defaults, set visually when attaching this script to the Canvas\n    text: \"准备就绪\",\n    tipsPrefab: cc.Prefab\n  },\n\n  ShowStory: function() {},\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.label.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n  },\n\n  netSocketEvent: function(msg, target) {\n    if (msg.cmd == XNetEvent.CONNECTED) {\n      //      target.WsHost.string = XNet.ws_host;\n      //      target.WsHost.node.color = cc.color(0, 255, 0, 100);\n      //      target.WsHost.node.opacity = 255;\n      target.NetReady = true;\n\n      if (target.CmdWait) {\n        XNet.Send(JSON.stringify(target.CmdWait));\n      }\n    }\n\n    if (\n      msg.cmd == XNetEvent.CONNECT_TIMEOUT ||\n      msg.cmd == XNetEvent.CONNECT_ERROR\n    ) {\n      target.label.string = \"网络连接错误\";\n    }\n\n    if (msg.cmd == XNetEvent.CONNECT) {\n      target.label.string = \"连接->\" + XNet.ws_host;\n      cc.director\n        .getScheduler()\n        .schedule(target.ConnectCheck, target, 6, 1, 6, false);\n    }\n  },\n\n  ConnectCheck: function() {\n    XNet.ConnectCheck(false);\n  },\n\n  _onAfterGetXMLHttpRequest: function(xhr) {\n    if (this.label) {\n      this.label.string = \"recv:\" + xhr.responseText;\n    }\n  },\n\n  UpdateGamePort: function() {\n    this._xhrXHR = null;\n    /*\n    cc.loader.load(\n      {\n        url: \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\",\n        type: \"json\"\n      },\n      function(err, text) {\n        console.log(\n          \"Should load a texture from RESTful API by specify the type: \",\n          text\n        );\n      }\n    );\n    */\n\n    let cav = cc.director.getScene().getChildByName(\"Canvas\");\n    let label = cav.getChildByName(\"LabelGamePort\");\n    if (label) {\n      let xlab = label.getComponent(cc.Label);\n      if (xlab) {\n        xlab.string = \"\";\n      }\n    }\n\n    var xhr = cc.loader.getXMLHttpRequest();\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status <= 207)) {\n        console.log(\"recv:\" + xhr.responseText);\n\n        if (label) {\n          let anim = label.getComponent(cc.Animation);\n          if (anim) {\n            anim.play(\"labGamePort\");\n          }\n          //label.node.color = cc.color(0, 255, 0, 255);\n          //label.node.visible = false;\n          let xlab = label.getComponent(cc.Label);\n          if (xlab) {\n            xlab.string = xhr.responseText;\n            console.log(\"========\" + label.string);\n          }\n        }\n        //this._onAfterGetXMLHttpRequest(xhr);\n      }\n    };\n    xhr.open(\"GET\", \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\");\n    xhr.timeout = 5000; //5 seconds for timeout\n    xhr.send();\n    this._xhrXHR = xhr;\n  },\n\n  UpdateGamePort1: function() {\n    var xhr = cc.loader.getXMLHttpRequest();\n    //    this.streamXHREventsToLabel(xhr, this.xhr, this.xhr, \"GET\");\n    //    var xhr = cc.loader.getXMLHttpRequest();\n\n    //xhr.open(\"GET\", url);\n    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status <= 207)) {\n        var response = xhr.responseText;\n        console.log(\"recv:\" + xhr.responseText);\n        //this.xhr.string = xhr.responseText;\n        //json 解析\n        var jsonData = JSON.parse(response);\n        var code = jsonData[\"code\"];\n        if (code == 1) {\n          //                self.successSprite.getComponent(cc.Animation).play('resAnimate');\n        }\n      }\n    };\n\n    xhr.open(\"GET\", \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\");\n    //set Content-type \"text/plain\" to post ArrayBuffer or ArrayBufferView\n    //xhr.setRequestHeader(\"Content-Type\",\"Application/json\");\n    // Uint8Array is an ArrayBufferView\n    xhr.timeout = 5000; //5 seconds for timeout\n    xhr.send();\n  },\n\n  // use this for initialization\n  onLoad: function() {\n    this.label.string = this.text;\n\n    this.netEvListener = { callback: this.netSocketEvent, target: this };\n    this.netMsgListener = { callback: this.netMsgProc, target: this };\n\n    XNet.EarAdd(this);\n    XNet.ListenerAdd(XNetEvent.CONNECTED, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_ERROR, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_TIMEOUT, this.netEvListener);\n\n    this.UpdateGamePort();\n  },\n\n  start() {\n    //TipsManager.init();\n  },\n\n  // called every frame\n  update: function(dt) {},\n\n  clickGameSwitch() {\n    //TipsManager.createTips(\"还没实现\");\n    this.createTips(\"还没实现\");\n  },\n\n  createTips(content) {\n    var n = cc.instantiate(this.tipsPrefab);\n    if (n) {\n      let tipsCtrl = n.getComponent(\"TipsCtrl\");\n      if (content && tipsCtrl) {\n        tipsCtrl.setContent(content);\n      }\n      n.parent = cc.director.getScene();\n    }\n  },\n\n  ClickAppBuild() {\n    //let ver =  appVer.string;\n    this.CmdWait = {\n      cmd: \"GX_APP_BUILD\",\n      ver: this.appVer.string,\n      app: \"XX\"\n    };\n\n    XNet.Close();\n    XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    XNet.Open();\n\n    this.label.string = \"build:\" + this.appVer.string;\n  },\n\n  ClickAppUpgradeTest() {\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.appVer.string,\n      app: \"XX\"\n    };\n    this.label.string = \"test-upgrade:\" + this.appVer.string;\n  },\n\n  ClickAppUpgradeAudit() {\n    //TipsManager.createTips(\"还没实现\");\n    this.createTips(\"还没实现\");\n  },\n  ClickGamePortWhere() {\n    this.UpdateGamePort();\n  }\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    ShowText: cc.Label\n    // foo: {\n    //     // ATTRIBUTES:\n    //     default: null,        // The default value will be used only when the component attaching\n    //                           // to a node for the first time\n    //     type: cc.SpriteFrame, // optional, default is typeof default\n    //     serializable: true,   // optional, default is true\n    // },\n    // bar: {\n    //     get () {\n    //         return this._bar;\n    //     },\n    //     set (value) {\n    //         this._bar = value;\n    //     }\n    // },\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n\n  start() {},\n\n  SetShowText: function(content) {\n    this.ShowText.string = content;\n  }\n\n  // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Username: cc.EditBox,\n    Password: cc.EditBox\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n\n  start() {},\n\n  ClickStart() {\n    cc.director.loadScene(\"gm\");\n  }\n\n  // update (dt) {},\n});\n","var WebSocket = WebSocket || window.WebSocket || window.MozWebSocket;\n\n//import { XOpcodes } from \"./Opcodes\";\n\n/*\nwebsocket 两种监听方式\n*/\n\nvar XNetEvent = {\n  CONNECT: \"XC_NET_CONNECT\",\n  CONNECT_ERROR: \"XC_NET_CONNECT_ERROR\",\n  CONNECT_TIMEOUT: \"XC_NET_CONNECT_TIMEOUT\",\n  CONNECTED: \"XC_NET_CONNECTED\",\n  CLOSE: \"XC_NET_CLOSE\"\n};\n\n//个人采用文本方式来收发数据\n//频率高的采用二进制数据进行收发 例如 移动数据包\n\nvar XNet = cc.Class({\n  extends: cc.Component,\n  statics: {\n    _socket: null,\n    ws_host: \"ws://test.9966886699.com:8086/game\",\n    _netPros: new Map(),\n    _netEars: new Array(),\n    _connectTimeout: 5,\n    _wsReConnectTimes: 0,\n    _reConnectFlag: false,\n    _reConnectMax: 3,\n\n    /**\n     * 发布收到事件消息\n     * event事件名\n     * msg 消息内容\n     */\n    dispatchXNet(event, msg) {\n      //        XGame.DoXEvent(event,msg);\n\n      this._netEars.forEach(function(item, index, array) {\n        item.netEvent(event, msg);\n      });\n\n      if (this._netPros[event]) {\n        var listeners = this._netPros[event].slice();\n        for (var i = 0; i < listeners.length; i++) {\n          listeners[i].callback(msg, listeners[i].target);\n        }\n      }\n    },\n\n    Host: function(uri) {\n      this.ws_host = uri;\n    },\n\n    Open: function() {\n      //console.log(\"ss:\" + this._socket.readyState);\n      if (this._socket == null) {\n        console.log(\"connect \" + this.ws_host);\n        //            if(this._socket!=null) delete this._socket;\n        this._socket = new WebSocket(this.ws_host);\n        this._socket.onopen = this._onOpen.bind(this);\n        this._socket.onerror = this._onError.bind(this);\n        this._socket.onclose = this._onClose.bind(this);\n        this._socket.onmessage = this._onMessage.bind(this);\n\n        //cc.director.getScheduler().schedule(this.connectTimeoutCheck,this,1, 5, 3,false);\n        this.dispatchXNet(XNetEvent.CONNECT, {\n          cmd: XNetEvent.CONNECT,\n          rc: 0\n        });\n      }\n      return this;\n    },\n\n    Close() {\n      if (this._socket != null) {\n        this._socket.close();\n        delete this._socket;\n        //        this._socket = nil;//这个不需要\n        //cc.director.getScheduler().\n        console.log(\"WebSocket is closed now.\");\n        XNet.dispatchXNet(XNetEvent.CLOSE, {\n          cmd: XNetEvent.CLOSE,\n          rc: 0\n        });\n      }\n    },\n\n    readyState() {\n      if (this._socket) return this._socket.readyState;\n      return -1;\n    },\n\n    _onOpen: function(event) {\n      console.log(\"connected \" + this.ws_host);\n      //utils.OutObj(evt);\n      //var event = new cc.Event(this,\"Network\",true);\n      //event.setUserData(\"{...}\");\n      //cc.eventTarget.dispatchEvent(event);\n      // cc.EventTarget.dispatchEvent(\"adas\",\"123\",evt);\n\n      //\n      //cc.eventManager.dispatchCustomEvent(\"XNetOpened\", {a:1,b:2});\n\n      //var event=new cc.EventCustom(\"XNetOpened\");\n      //cc.SystemEvent.dispatchCustomEvent(event);\n      this.dispatchXNet(XNetEvent.CONNECTED, {\n        cmd: XNetEvent.CONNECTED,\n        rc: 0\n      });\n    },\n\n    _onError: function(event) {\n      XNet.dispatchXNet(XNetEvent.CONNECT_ERROR, {\n        cmd: XNetEvent.CONNECT_ERROR,\n        rc: event\n      });\n      console.error(\"WebSocket error observed:\", event);\n    },\n\n    _onClose: function(event) {\n      console.log(\"WebSocket is closed now.\");\n      XNet.dispatchXNet(XNetEvent.CLOSE, {\n        cmd: XNetEvent.CLOSE,\n        rc: 0\n      });\n\n      // if (this._socket) {\n      //   delete this._socket;\n      //   this._socket = null;\n      // }\n    },\n\n    _onMessage: function(event) {\n      console.log(\"WebSocket message received:\" + event.data);\n      let msg = JSON.parse(event.data);\n      //console.log(msg.cmd);\n      XNet.dispatchXNet(msg.cmd, msg);\n    },\n\n    /**\n     * 添加监听\n     */\n    ListenerAdd(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (!listenerList) listenerList = this._netPros[event] = new Array();\n      for (var i = 0; i < listenerList.length; i++) {\n        if (listenerList[i] == callback) return;\n      }\n      listenerList.push(callback);\n    },\n\n    ListenerRemove(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (listenerList) {\n        for (var i = 0; i < listenerList.length; i++) {\n          if (listenerList[i] == callback) {\n            listenerList.splice(i, 1);\n            return;\n          }\n        }\n      }\n    },\n\n    EarAdd(ear) {\n      this._netEars.push(ear);\n    },\n\n    EarRemove(ear) {\n      let pos = this._netEars.indexOf(ear);\n      this._netEars.splice(pos, 1);\n    },\n\n    ConnectCheck: function(flagReconn) {\n      if (this._socket == null) return;\n\n      if (this._socket.readyState == WebSocket.CONNECTING) {\n        console.log(\"websocket connect timeout\");\n        XNet.dispatchXNet(XNetEvent.CONNECT_TIMEOUT, {\n          cmd: XNetEvent.CONNECT_TIMEOUT,\n          rc: 0\n        });\n        if (flagReconn) this.Open();\n      }\n\n      if (this._socket.readyState == WebSocket.CLOSED) {\n        console.log(\"websocket reconnect\");\n        //this.connect();\n      }\n    },\n\n    Send: function(text) {\n      if (!this._socket) return;\n      if (this._socket.readyState == WebSocket.OPEN) {\n        this._socket.send(text);\n      }\n    }\n  }\n});\n\nexport { XNet, XNetEvent };\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Name: cc.Label\n    //    Cmdline: \"\",\n    //    Note: \"\"\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  SetData(callback, target, title, cmdline, note) {\n    this.Target = target;\n    this.Callback = callback;\n    this.Name.string = title;\n    this.Cmdline = cmdline;\n    this.Note = note;\n  },\n\n  // onLoad () {},\n  Click() {\n    if (this.Callback) {\n      this.Callback(this.Target, this.Cmdline, this.Note);\n    }\n  },\n\n  start() {}\n\n  // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    ShowText: cc.Label\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n  onDestroySelf() {\n    this.node.destroy();\n  },\n\n  onEnable() {\n    //let sz = this.node.parent.getSize();\n    let sz = cc.director.getWinSize();\n    this.node.setPosition(sz.width / 2, sz.height / 2, 0);\n  },\n\n  start() {},\n\n  setContent(text) {\n    if (text) this.ShowText.string = text;\n    //this.getScheduler().schedule(this.AutoRemove, this, 1, 1, 3, false);\n    //this.runAction()\n    //cc.director.getScheduler().schedule(this.AutoRemove, this, 1, 1, 3, false);\n  },\n\n  AutoRemove() {\n    this.node.parent.removeChild(this.node);\n  }\n\n  // update (dt) {},\n});\n","cc.Class({\n  extends: cc.Component,\n  properties: {\n    tispPrefab: cc.Prefab\n  },\n\n  init() {\n    if (this.tipsPrefab) return;\n\n    // cc.loader.loadRes(\"tips/Tips\", (err, prefab) => {\n    //   this.tipsPrefab = prefab;\n    // });\n    console.log(\"tips prefab ok\");\n  },\n\n  createTips(content) {\n    var n = cc.instantiate(this.tipsPrefab);\n    if (n) {\n      let tipsCtrl = n.getComponent(\"TipsCtrl\");\n      if (content && tipsCtrl) {\n        tipsCtrl.setContent(content);\n      }\n      n.parent = cc.director.getScene();\n    }\n  }\n});\n","import { XNet, XNetEvent } from \"./Network\";\n\n//import { TipsManager } from \"./TipsManager\";\n//const TipsManager = require(\"./TipsManager\");\n\n// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    netEvListener: null,\n    netMsgListener: null,\n    Version: cc.EditBox,\n    WsHost: cc.Label,\n    TxLog: cc.Label,\n    NetReady: Boolean,\n    CmdWait: null\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    /*\n    if (event == XOpcodes.XC_NET_CONNECTED) {\n      this.auth();\n      return;\n    }*/\n\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.TxLog.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n  },\n\n  netSocketEvent: function(msg, target) {\n    if (msg.cmd == XNetEvent.CONNECTED) {\n      target.WsHost.string = XNet.ws_host;\n      target.WsHost.node.color = cc.color(0, 255, 0, 100);\n      target.WsHost.node.opacity = 255;\n      target.NetReady = true;\n\n      if (target.CmdWait) {\n        XNet.Send(JSON.stringify(target.CmdWait));\n      }\n    }\n\n    if (\n      msg.cmd == XNetEvent.CONNECT_TIMEOUT ||\n      msg.cmd == XNetEvent.CONNECT_ERROR\n    ) {\n      target.TxLog.string = \"网络连接错误\";\n    }\n\n    if (msg.cmd == XNetEvent.CONNECT) {\n      target.TxLog.string = \"连接->\" + XNet.ws_host;\n      cc.director\n        .getScheduler()\n        .schedule(target.ConnectCheck, target, 6, 1, 6, false);\n    }\n  },\n\n  ConnectCheck: function() {\n    XNet.ConnectCheck(false);\n  },\n\n  netMsgProc: function(msg, target) {},\n\n  onLoad() {\n    this.netEvListener = { callback: this.netSocketEvent, target: this };\n    this.netMsgListener = { callback: this.netMsgProc, target: this };\n\n    XNet.EarAdd(this);\n    XNet.ListenerAdd(XNetEvent.CONNECTED, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_ERROR, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_TIMEOUT, this.netEvListener);\n\n    //XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    //XNet.Open();\n  },\n\n  start() {},\n\n  ClickBuild() {\n    this.CmdWait = {\n      cmd: \"GX_APP_BUILD\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n\n    XNet.Close();\n    XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    XNet.Open();\n\n    //let ver = this.Version.string;\n    //console.log(\"build...\" + JSON.stringify(scmd));\n    //XNet.Send(JSON.stringify(scmd));\n  },\n\n  ClickTestUpgrade() {\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n  },\n\n  ClickAuditInstall() {\n    XNet.Close();\n    XNet.Host(\"ws://app.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n  },\n\n  ClickGameSwitchPort() {\n    //console.log(\"ClickGameSwitchPort\");\n    //TipsManager.CreateTips(\"现不支持\");\n  },\n\n  ClickAuditPass() {}\n\n  // update (dt) {},\n});\n"],"sourceRoot":"/source/","file":"project.js"}