{"version":3,"sources":["HelloWorld.js"],"names":["cc","Class","extends","Component","properties","label","default","type","Label","labXhr","NetReady","appVer","EditBox","netEvListener","netMsgListener","CmdWait","text","tipsPrefab","Prefab","netEvent","event","msg","string","console","log","JSON","stringify","netSocketEvent","target","cmd","XNetEvent","CONNECTED","XNet","Send","CONNECT_TIMEOUT","CONNECT_ERROR","CONNECT","ws_host","director","getScheduler","schedule","ConnectCheck","_onAfterGetXMLHttpRequest","xhr","responseText","UpdateGamePort","_xhrXHR","cav","getScene","getChildByName","xlab","getComponent","loader","getXMLHttpRequest","onreadystatechange","readyState","status","anim","Animation","play","open","timeout","send","UpdateGamePort1","setRequestHeader","response","jsonData","parse","code","onLoad","callback","netMsgProc","EarAdd","ListenerAdd","start","update","dt","clickGameSwitch","createTips","content","n","instantiate","tipsCtrl","setContent","parent","ClickAppBuild","ver","app","Close","Host","Open","ClickAppUpgradeTest","ClickAppUpgradeAudit","ClickGamePortWhere"],"mappings":"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","file":"HelloWorld.js","sourceRoot":"../../../../assets/Script","sourcesContent":["//const TipsManager = require(\"./TipsManager.js\"); //浏览器会有问题\nimport { XNet, XNetEvent } from \"./Network\";\n//import { TipsManager } from \"./TipsManager\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    label: {\n      default: null,\n      type: cc.Label\n    },\n    labXhr: cc.Label,\n    NetReady: false,\n    appVer: cc.EditBox,\n    netEvListener: null,\n    netMsgListener: null,\n    CmdWait: null,\n    // defaults, set visually when attaching this script to the Canvas\n    text: \"准备就绪\",\n    tipsPrefab: cc.Prefab\n  },\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.label.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n  },\n\n  netSocketEvent: function(msg, target) {\n    if (msg.cmd == XNetEvent.CONNECTED) {\n      //      target.WsHost.string = XNet.ws_host;\n      //      target.WsHost.node.color = cc.color(0, 255, 0, 100);\n      //      target.WsHost.node.opacity = 255;\n      target.NetReady = true;\n\n      if (target.CmdWait) {\n        XNet.Send(JSON.stringify(target.CmdWait));\n      }\n    }\n\n    if (\n      msg.cmd == XNetEvent.CONNECT_TIMEOUT ||\n      msg.cmd == XNetEvent.CONNECT_ERROR\n    ) {\n      target.label.string = \"网络连接错误\";\n    }\n\n    if (msg.cmd == XNetEvent.CONNECT) {\n      target.label.string = \"连接->\" + XNet.ws_host;\n      cc.director\n        .getScheduler()\n        .schedule(target.ConnectCheck, target, 6, 1, 6, false);\n    }\n  },\n\n  ConnectCheck: function() {\n    XNet.ConnectCheck(false);\n  },\n\n  _onAfterGetXMLHttpRequest: function(xhr) {\n    if (this.label) {\n      this.label.string = \"recv:\" + xhr.responseText;\n    }\n  },\n\n  UpdateGamePort: function() {\n    this._xhrXHR = null;\n    /*\n    cc.loader.load(\n      {\n        url: \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\",\n        type: \"json\"\n      },\n      function(err, text) {\n        console.log(\n          \"Should load a texture from RESTful API by specify the type: \",\n          text\n        );\n      }\n    );\n    */\n\n    let cav = cc.director.getScene().getChildByName(\"Canvas\");\n    let label = cav.getChildByName(\"LabelGamePort\");\n    if (label) {\n      let xlab = label.getComponent(cc.Label);\n      if (xlab) {\n        xlab.string = \"\";\n      }\n    }\n\n    var xhr = cc.loader.getXMLHttpRequest();\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status <= 207)) {\n        console.log(\"recv:\" + xhr.responseText);\n\n        if (label) {\n          let anim = label.getComponent(cc.Animation);\n          if (anim) {\n            anim.play(\"labGamePort\");\n          }\n          //label.node.color = cc.color(0, 255, 0, 255);\n          //label.node.visible = false;\n          let xlab = label.getComponent(cc.Label);\n          if (xlab) {\n            xlab.string = xhr.responseText;\n            console.log(\"========\" + label.string);\n          }\n        }\n        //this._onAfterGetXMLHttpRequest(xhr);\n      }\n    };\n    xhr.open(\"GET\", \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\");\n    xhr.timeout = 5000; //5 seconds for timeout\n    xhr.send();\n    this._xhrXHR = xhr;\n  },\n\n  UpdateGamePort1: function() {\n    var xhr = cc.loader.getXMLHttpRequest();\n    //    this.streamXHREventsToLabel(xhr, this.xhr, this.xhr, \"GET\");\n    //    var xhr = cc.loader.getXMLHttpRequest();\n\n    //xhr.open(\"GET\", url);\n    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status <= 207)) {\n        var response = xhr.responseText;\n        console.log(\"recv:\" + xhr.responseText);\n        //this.xhr.string = xhr.responseText;\n        //json 解析\n        var jsonData = JSON.parse(response);\n        var code = jsonData[\"code\"];\n        if (code == 1) {\n          //                self.successSprite.getComponent(cc.Animation).play('resAnimate');\n        }\n      }\n    };\n\n    xhr.open(\"GET\", \"http://xxgame.9966886699.com/where.php?v=10800&p=1000&\");\n    //set Content-type \"text/plain\" to post ArrayBuffer or ArrayBufferView\n    //xhr.setRequestHeader(\"Content-Type\",\"Application/json\");\n    // Uint8Array is an ArrayBufferView\n    xhr.timeout = 5000; //5 seconds for timeout\n    xhr.send();\n  },\n\n  // use this for initialization\n  onLoad: function() {\n    this.label.string = this.text;\n\n    this.netEvListener = { callback: this.netSocketEvent, target: this };\n    this.netMsgListener = { callback: this.netMsgProc, target: this };\n\n    XNet.EarAdd(this);\n    XNet.ListenerAdd(XNetEvent.CONNECTED, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_ERROR, this.netEvListener);\n    XNet.ListenerAdd(XNetEvent.CONNECT_TIMEOUT, this.netEvListener);\n\n    this.UpdateGamePort();\n  },\n\n  start() {\n    //TipsManager.init();\n  },\n\n  // called every frame\n  update: function(dt) {},\n\n  clickGameSwitch() {\n    //TipsManager.createTips(\"还没实现\");\n    this.createTips(\"还没实现\");\n  },\n\n  createTips(content) {\n    var n = cc.instantiate(this.tipsPrefab);\n    if (n) {\n      let tipsCtrl = n.getComponent(\"TipsCtrl\");\n      if (content && tipsCtrl) {\n        tipsCtrl.setContent(content);\n      }\n      n.parent = cc.director.getScene();\n    }\n  },\n\n  ClickAppBuild() {\n    //let ver =  appVer.string;\n    this.CmdWait = {\n      cmd: \"GX_APP_BUILD\",\n      ver: this.appVer.string,\n      app: \"XX\"\n    };\n\n    XNet.Close();\n    XNet.Host(\"ws://192.168.1.99:3737/appPub\");\n    XNet.Open();\n\n    this.label.string = \"build:\" + this.appVer.string;\n  },\n\n  ClickAppUpgradeTest() {\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:3737/appPub\");\n    XNet.Open();\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.appVer.string,\n      app: \"XX\"\n    };\n    this.label.string = \"test-upgrade:\" + this.appVer.string;\n  },\n\n  ClickAppUpgradeAudit() {\n    //TipsManager.createTips(\"还没实现\");\n    this.createTips(\"还没实现\");\n  },\n  ClickGamePortWhere() {\n    this.UpdateGamePort();\n  }\n});\n"]}