{"version":3,"sources":["GMain.js"],"names":["cc","Class","extends","Component","properties","TryTick","start","XGame","Where","cbWhere","who","response","console","log","XNet","dispatchXNet","cbUpgrade"],"mappings":";;;;;;8QAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACVC,aAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBU,GAHL;;AAsBP;;AAEA;;AAEAC,OA1BO,mBA0BC;AACN,SAAKD,OAAL,GAAe,CAAf;AACAE,gBAAMC,KAAN,CAAY,KAAKC,OAAjB,EAA0B,IAA1B,EAAgC,KAAKJ,OAArC;AACD,GA7BM;;;AA+BPI,WAAS,iBAASC,GAAT,EAAcC,QAAd,EAAwB;AAC/BC,YAAQC,GAAR,CAAYF,QAAZ;AACAC,YAAQC,GAAR,QAAmBH,GAAnB,yCAAmBA,GAAnB;AACAA,QAAIL,OAAJ;AACAO,YAAQC,GAAR,CAAYH,IAAIL,OAAhB;AACA,QAAIM,YAAY,IAAhB,EAAsB;AACpBJ,kBAAMC,KAAN,CAAYE,IAAID,OAAhB,EAAyBC,IAAIL,OAA7B;AACD,KAFD,MAEO;AACL;AACAS,oBAAKC,YAAL,CAAkB,YAAlB,EAAgCJ,QAAhC;AACD;AACF,GA1CM;;AA4CP;AACAK,aAAW,mBAASN,GAAT,EAAcC,QAAd,EAAwB,CAAE;;AAErC;AA/CO,CAAT","file":"GMain.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nimport { XGame } from \"./Game\";\nimport { XNet } from \"./Network\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    TryTick: 0\n    // foo: {\n    //     // ATTRIBUTES:\n    //     default: null,        // The default value will be used only when the component attaching\n    //                           // to a node for the first time\n    //     type: cc.SpriteFrame, // optional, default is typeof default\n    //     serializable: true,   // optional, default is true\n    // },\n    // bar: {\n    //     get () {\n    //         return this._bar;\n    //     },\n    //     set (value) {\n    //         this._bar = value;\n    //     }\n    // },\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n\n  start() {\n    this.TryTick = 1;\n    XGame.Where(this.cbWhere, this, this.TryTick);\n  },\n\n  cbWhere: function(who, response) {\n    console.log(response);\n    console.log(typeof who);\n    who.TryTick++;\n    console.log(who.TryTick);\n    if (response == null) {\n      XGame.Where(who.cbWhere, who.TryTick);\n    } else {\n      //进行热更新判断\n      XNet.dispatchXNet(\"GX_WHERE_R\", response);\n    }\n  },\n\n  //\n  cbUpgrade: function(who, response) {}\n\n  // update (dt) {},\n});\n"]}