{"version":3,"sources":["Gm.js"],"names":["cc","Class","extends","Component","properties","WsHost","EditBox","CmdSend","CmdResult","Recv","LastCmdName","RecvCount","LabRecvCount","Label","GmJson","default","type","JsonAsset","netEvent","event","msg","cmdline","JSON","stringify","TxLog","string","text","console","log","cmd","toString","onLoad","XNet","EarAdd","loader","loadRes","err","jsonAsset","_onAfterGmJsonDBLoaded","bind","start","json","ClickConnect","length","Close","Host","Open","ClickDisconnect","ClickWsLibrary","ClickCmdSend","parse","Send","e","message"],"mappings":";;;;;;AAAA;;AAEAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACVC,YAAQL,GAAGM,OADD;AAEVC,aAASP,GAAGM,OAFF;AAGVE,eAAWR,GAAGM,OAHJ;AAIVG,UAAMT,GAAGM,OAJC;AAKVI,iBAAa,EALH,EAKO;AACjBC,eAAW,CAND;AAOVC,kBAAcZ,GAAGa,KAPP;AAQVC,YAAQ,EAAEC,SAAS,IAAX,EAAiBC,MAAMhB,GAAGiB,SAA1B;AARE,GAHL;;AAcPC,YAAU,kBAASC,KAAT,EAAgBC,GAAhB,EAAqB;AAC7B;AACA;;;;;AAKA,QAAIC,UAAUC,KAAKC,SAAL,CAAeH,GAAf,CAAd;AACA,QAAID,SAAS,kBAAb,EAAiC;AAC/B,WAAKK,KAAL,CAAWC,MAAX,GAAoBL,IAAIM,IAAxB;AACD;AACDC,YAAQC,GAAR,CAAY,cAAcN,KAAKC,SAAL,CAAeH,GAAf,CAA1B;AACA,QAAIA,IAAIS,GAAJ,KAAY,KAAKnB,WAAL,GAAmB,IAAnC,EAAyC;AACvC,WAAKF,SAAL,CAAeiB,MAAf,GAAwBJ,OAAxB;AACD;;AAED,SAAKZ,IAAL,CAAUgB,MAAV,GAAmBJ,OAAnB;AACA,SAAKV,SAAL;AACA,SAAKC,YAAL,CAAkBa,MAAlB,GAA2B,UAAU,KAAKd,SAAL,CAAemB,QAAf,EAArC;AACD,GAjCM;;AAmCP;;AAEAC,QArCO,oBAqCE;AACPC,kBAAKC,MAAL,CAAY,IAAZ;;AAEAjC,OAAGkC,MAAH,CAAUC,OAAV,CACE,WADF,EAEE,UAASC,GAAT,EAAcC,SAAd,EAAyB;AACvB,WAAKvB,MAAL,GAAcuB,SAAd;AACA;AACA,WAAKC,sBAAL;AACD,KAJD,CAIEC,IAJF,CAIO,IAJP,CAFF;AAQD,GAhDM;AAkDPC,OAlDO,mBAkDC,CAAE,CAlDH;AAoDPF,wBApDO,oCAoDkB;AACvB,QAAI,KAAKxB,MAAT,EAAiB;AACfa,cAAQC,GAAR,CAAYN,KAAKC,SAAL,CAAe,KAAKT,MAAL,CAAY2B,IAA3B,CAAZ;AACD;AACF,GAxDM;;;AA0DP;;AAEAC,cA5DO,0BA4DQ;AACb,QAAI,KAAKrC,MAAL,CAAYoB,MAAZ,CAAmBkB,MAAnB,GAA4B,CAAhC,EAAmC;AACjC;AACD;AACDX,kBAAKY,KAAL;AACAZ,kBAAKa,IAAL,CAAU,kCAAV;AACAb,kBAAKc,IAAL;AACA;;;;;;;AAOD,GA1EM;AA2EPC,iBA3EO,6BA2EW;AAChBf,kBAAKY,KAAL;AACD,GA7EM;;AA8EP;AACAI,gBA/EO,4BA+EU,CAAE,CA/EZ;;;AAiFP;AACAC,cAlFO,0BAkFQ;AACb,QAAI5B,UAAU,KAAKd,OAAL,CAAakB,MAA3B;AACAE,YAAQC,GAAR,CAAY,aAAaP,OAAzB;AACA,QAAI;AACF,UAAID,MAAME,KAAK4B,KAAL,CAAW7B,OAAX,CAAV;AACA,WAAKX,WAAL,GAAmBU,IAAIS,GAAvB;AACAG,oBAAKmB,IAAL,CAAU9B,OAAV;AACD,KAJD,CAIE,OAAO+B,CAAP,EAAU;AACV,WAAK5C,SAAL,CAAeiB,MAAf,GAAwB2B,EAAEC,OAA1B;AACD;AACF;AA5FM,CAAT","file":"Gm.js","sourceRoot":"../../../../assets/Script","sourcesContent":["import { XNet, XNetEvent } from \"./Network\";\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    WsHost: cc.EditBox,\n    CmdSend: cc.EditBox,\n    CmdResult: cc.EditBox,\n    Recv: cc.EditBox,\n    LastCmdName: \"\", //最后发出的命令名\n    RecvCount: 0,\n    LabRecvCount: cc.Label,\n    GmJson: { default: null, type: cc.JsonAsset }\n  },\n\n  netEvent: function(event, msg) {\n    //这里处理游戏来的所有事件\n    /*\n    if (event == XOpcodes.XC_NET_CONNECTED) {\n      this.auth();\n      return;\n    }*/\n    let cmdline = JSON.stringify(msg);\n    if (event == \"GX_APP_BUILD_MSG\") {\n      this.TxLog.string = msg.text;\n    }\n    console.log(\"netEvent:\" + JSON.stringify(msg));\n    if (msg.cmd === this.LastCmdName + \"_R\") {\n      this.CmdResult.string = cmdline;\n    }\n\n    this.Recv.string = cmdline;\n    this.RecvCount++;\n    this.LabRecvCount.string = \"接收数据:\" + this.RecvCount.toString();\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    XNet.EarAdd(this);\n\n    cc.loader.loadRes(\n      \"db/gm_cmd\",\n      function(err, jsonAsset) {\n        this.GmJson = jsonAsset;\n        //console.log(JSON.stringify(jsonAsset.json));\n        this._onAfterGmJsonDBLoaded();\n      }.bind(this)\n    );\n  },\n\n  start() {},\n\n  _onAfterGmJsonDBLoaded() {\n    if (this.GmJson) {\n      console.log(JSON.stringify(this.GmJson.json));\n    }\n  },\n\n  // update (dt) {},\n\n  ClickConnect() {\n    if (this.WsHost.string.length < 1) {\n      return;\n    }\n    XNet.Close();\n    XNet.Host(\"ws://test.9966886699.com:8086/xx\");\n    XNet.Open();\n    /*\n    this.CmdWait = {\n      cmd: \"GX_APP_UPGRADE\",\n      ver: this.Version.string,\n      app: \"XX\"\n    };\n    */\n  },\n  ClickDisconnect() {\n    XNet.Close();\n  },\n  //服务器连接库\n  ClickWsLibrary() {},\n\n  //发出命令\n  ClickCmdSend() {\n    let cmdline = this.CmdSend.string;\n    console.log(\"cmdline:\" + cmdline);\n    try {\n      let msg = JSON.parse(cmdline);\n      this.LastCmdName = msg.cmd;\n      XNet.Send(cmdline);\n    } catch (e) {\n      this.CmdResult.string = e.message;\n    }\n  }\n});\n"]}