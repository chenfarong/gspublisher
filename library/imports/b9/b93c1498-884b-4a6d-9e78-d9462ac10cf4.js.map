{"version":3,"sources":["../../../../assets/Script/assets/Script/Network.js"],"names":["WebSocket","window","MozWebSocket","XNetEvent","CONNECT","CONNECT_ERROR","CONNECT_TIMEOUT","CONNECTED","CLOSE","XNet","cc","Class","extends","Component","statics","_socket","ws_host","_netPros","Map","_netEars","Array","_connectTimeout","_wsReConnectTimes","_reConnectFlag","_reConnectMax","dispatchXNet","event","msg","forEach","item","index","array","netEvent","listeners","slice","i","length","callback","target","Host","uri","Open","readyState","OPEN","console","log","onopen","_onOpen","bind","onerror","_onError","onclose","_onClose","onmessage","_onMessage","cmd","rc","Close","error","data","JSON","parse","ListenerAdd","listenerList","push","ListenerRemove","splice","EarAdd","ear","EarRemove","pos","indexOf","ConnectCheck","flagReconn","CONNECTING","CLOSED","Send","text","send"],"mappings":"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","file":"Network.js","sourceRoot":"../../../../assets/Script","sourcesContent":["var WebSocket = WebSocket || window.WebSocket || window.MozWebSocket;\n\n//import { XOpcodes } from \"./Opcodes\";\n\nvar XNetEvent = {\n  CONNECT: \"XC_NET_CONNECT\",\n  CONNECT_ERROR: \"XC_NET_CONNECT_ERROR\",\n  CONNECT_TIMEOUT: \"XC_NET_CONNECT_TIMEOUT\",\n  CONNECTED: \"XC_NET_CONNECTED\",\n  CLOSE: \"XC_NET_CLOSE\"\n};\n\n//个人采用文本方式来收发数据\n//频率高的采用二进制数据进行收发 例如 移动数据包\n\nvar XNet = cc.Class({\n  extends: cc.Component,\n  statics: {\n    _socket: {},\n    ws_host: \"ws://test.9966886699.com:8086/game\",\n    _netPros: new Map(),\n    _netEars: new Array(),\n    _connectTimeout: 5,\n    _wsReConnectTimes: 0,\n    _reConnectFlag: false,\n    _reConnectMax: 3,\n\n    dispatchXNet(event, msg) {\n      //        XGame.DoXEvent(event,msg);\n\n      this._netEars.forEach(function(item, index, array) {\n        item.netEvent(event, msg);\n      });\n\n      if (this._netPros[event]) {\n        var listeners = this._netPros[event].slice();\n        for (var i = 0; i < listeners.length; i++) {\n          listeners[i].callback(msg, listeners[i].target);\n        }\n      }\n    },\n\n    Host: function(uri) {\n      this.ws_host = uri;\n    },\n\n    Open: function() {\n      if (this._socket.readyState != WebSocket.OPEN) {\n        console.log(\"connect \" + this.ws_host);\n        //            if(this._socket!=null) delete this._socket;\n\n        this._socket = new WebSocket(this.ws_host);\n        this._socket.onopen = this._onOpen.bind(this);\n        this._socket.onerror = this._onError.bind(this);\n        this._socket.onclose = this._onClose.bind(this);\n        this._socket.onmessage = this._onMessage.bind(this);\n\n        //cc.director.getScheduler().schedule(this.connectTimeoutCheck,this,1, 5, 3,false);\n        this.dispatchXNet(XNetEvent.CONNECT, {\n          cmd: XNetEvent.CONNECT,\n          rc: 0\n        });\n      }\n      return this;\n    },\n\n    Close() {\n      if (this._socket && this._socket.readyState == 1) {\n        delete this._socket;\n        //        this._socket = nil;//这个不需要\n        //cc.director.getScheduler().\n      }\n    },\n\n    readyState() {\n      if (this._socket) return this._socket.readyState;\n      return -1;\n    },\n\n    _onOpen: function(event) {\n      console.log(\"connected \" + this.ws_host);\n      //utils.OutObj(evt);\n      //var event = new cc.Event(this,\"Network\",true);\n      //event.setUserData(\"{...}\");\n      //cc.eventTarget.dispatchEvent(event);\n      // cc.EventTarget.dispatchEvent(\"adas\",\"123\",evt);\n\n      //\n      //cc.eventManager.dispatchCustomEvent(\"XNetOpened\", {a:1,b:2});\n\n      //var event=new cc.EventCustom(\"XNetOpened\");\n      //cc.SystemEvent.dispatchCustomEvent(event);\n      this.dispatchXNet(XNetEvent.CONNECTED, {\n        cmd: XNetEvent.CONNECTED,\n        rc: 0\n      });\n    },\n\n    _onError: function(event) {\n      XNet.dispatchXNet(XNetEvent.CONNECT_ERROR, {\n        cmd: XNetEvent.CONNECT_ERROR,\n        rc: event\n      });\n      console.error(\"WebSocket error observed:\", event);\n    },\n\n    _onClose: function(event) {\n      console.log(\"WebSocket is closed now.\");\n      XNet.dispatchXNet(XNetEvent.CLOSE, {\n        cmd: XNetEvent.CLOSE,\n        rc: 0\n      });\n    },\n\n    _onMessage: function(event) {\n      console.log(\"WebSocket message received:\" + event.data);\n      let msg = JSON.parse(event.data);\n      //console.log(msg.cmd);\n      XNet.dispatchXNet(msg.cmd, msg);\n    },\n\n    ListenerAdd(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (!listenerList) listenerList = this._netPros[event] = new Array();\n      for (var i = 0; i < listenerList.length; i++) {\n        if (listenerList[i] == callback) return;\n      }\n      listenerList.push(callback);\n    },\n\n    ListenerRemove(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (listenerList) {\n        for (var i = 0; i < listenerList.length; i++) {\n          if (listenerList[i] == callback) {\n            listenerList.splice(i, 1);\n            return;\n          }\n        }\n      }\n    },\n\n    EarAdd(ear) {\n      this._netEars.push(ear);\n    },\n\n    EarRemove(ear) {\n      let pos = this._netEars.indexOf(ear);\n      this._netEars.splice(pos, 1);\n    },\n\n    ConnectCheck: function(flagReconn) {\n      if (this._socket == null) return;\n\n      if (this._socket.readyState == WebSocket.CONNECTING) {\n        console.log(\"websocket connect timeout\");\n        XNet.dispatchXNet(XNetEvent.CONNECT_TIMEOUT, {\n          cmd: XNetEvent.CONNECT_TIMEOUT,\n          rc: 0\n        });\n        if (flagReconn) this.Open();\n      }\n\n      if (this._socket.readyState == WebSocket.CLOSED) {\n        console.log(\"websocket reconnect\");\n        //this.connect();\n      }\n    },\n\n    Send: function(text) {\n      if (!this._socket) return;\n      if (this._socket.readyState == WebSocket.OPEN) {\n        this._socket.send(text);\n      }\n    }\n  }\n});\n\nexport { XNet, XNetEvent };\n"]}